{
	"info": {
		"_postman_id": "bfe6341b-f350-42c0-af5f-e681ae574be2",
		"name": "Customer Registration System API",
		"description": "Customer Registration System API documentation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28685983"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "customers",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get customer by ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Unique identifier of the customer to retrieve"
														}
													]
												},
												"description": "Retrieve a specific customer's details using their unique identifier."
											},
											"response": [
												{
													"name": "Customer found and returned successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/customers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"customers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Unique identifier of the customer to retrieve"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Customer retrieved successfully\",\n  \"data\": {\n    \"id\": 1,\n    \"firstName\": \"John\",\n    \"middleName\": \"Michael\",\n    \"lastName\": \"Doe\",\n    \"dateOfBirth\": \"1990-05-15\",\n    \"nidaNumber\": \"19900515123456789\",\n    \"registrationDate\": \"2024-01-15T10:30:00Z\",\n    \"region\": \"Dar es Salaam\",\n    \"district\": \"Kinondoni\",\n    \"ward\": \"Mikocheni\",\n    \"registeredById\": 2\n  }\n}"
												},
												{
													"name": "Customer not found with the provided ID",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/customers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"customers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Unique identifier of the customer to retrieve"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"message\": \"Customer not found with id: 999\"\n}"
												}
											]
										},
										{
											"name": "Update an existing customer",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateOfBirth\": \"1976-02-12\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"nidaNumber\": \"00329669991330471487\",\n  \"id\": 693,\n  \"middleName\": \"st\",\n  \"region\": \"s\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) ID of the customer to update"
														}
													]
												},
												"description": "Update all fields of an existing customer record. Requires the complete customer object."
											},
											"response": [
												{
													"name": "Customer updated successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dateOfBirth\": \"1976-02-12\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"nidaNumber\": \"00329669991330471487\",\n  \"id\": 693,\n  \"middleName\": \"st\",\n  \"region\": \"s\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/customers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"customers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) ID of the customer to update"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Customer updated successfully\",\n  \"data\": {\n    \"id\": 1,\n    \"firstName\": \"John\",\n    \"middleName\": \"Michael\",\n    \"lastName\": \"Smith\",\n    \"dateOfBirth\": \"1990-05-15\",\n    \"nidaNumber\": \"19900515123456789\",\n    \"registrationDate\": \"2024-01-15T10:30:00Z\",\n    \"region\": \"Dar es Salaam\",\n    \"district\": \"Kinondoni\",\n    \"ward\": \"Mikocheni\",\n    \"registeredById\": 2\n  }\n}"
												},
												{
													"name": "Bad request - Invalid ID or customer data",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dateOfBirth\": \"1976-02-12\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"nidaNumber\": \"00329669991330471487\",\n  \"id\": 693,\n  \"middleName\": \"st\",\n  \"region\": \"s\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/customers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"customers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) ID of the customer to update"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												},
												{
													"name": "Customer not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dateOfBirth\": \"1976-02-12\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"nidaNumber\": \"00329669991330471487\",\n  \"id\": 693,\n  \"middleName\": \"st\",\n  \"region\": \"s\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/customers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"customers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) ID of the customer to update"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												}
											]
										},
										{
											"name": "Delete a customer",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) ID of the customer to delete"
														}
													]
												},
												"description": "Permanently remove a customer record from the system. This action cannot be undone."
											},
											"response": [
												{
													"name": "Customer deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/customers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"customers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) ID of the customer to delete"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Customer deleted successfully\"\n}"
												},
												{
													"name": "Customer not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/customers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"customers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) ID of the customer to delete"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												}
											]
										},
										{
											"name": "Partially update a customer",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateOfBirth\": \"1976-02-12\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"nidaNumber\": \"00329669991330471487\",\n  \"id\": 693,\n  \"middleName\": \"st\",\n  \"region\": \"s\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) ID of the customer to partially update"
														}
													]
												},
												"description": "Update specific fields of an existing customer. Only provided fields will be updated, null fields are ignored."
											},
											"response": [
												{
													"name": "Customer partially updated successfully",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dateOfBirth\": \"1976-02-12\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"nidaNumber\": \"00329669991330471487\",\n  \"id\": 693,\n  \"middleName\": \"st\",\n  \"region\": \"s\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/customers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"customers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) ID of the customer to partially update"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Customer partially updated successfully\",\n  \"data\": {\n    \"id\": 1,\n    \"firstName\": \"John\",\n    \"middleName\": \"Michael\",\n    \"lastName\": \"Smith\",\n    \"dateOfBirth\": \"1990-05-15\",\n    \"nidaNumber\": \"19900515123456789\",\n    \"registrationDate\": \"2024-01-15T10:30:00Z\",\n    \"region\": \"Dar es Salaam\",\n    \"district\": \"Kinondoni\",\n    \"ward\": \"Mikocheni\",\n    \"registeredById\": 2\n  }\n}"
												},
												{
													"name": "Bad request - Invalid ID or customer data",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dateOfBirth\": \"1976-02-12\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"nidaNumber\": \"00329669991330471487\",\n  \"id\": 693,\n  \"middleName\": \"st\",\n  \"region\": \"s\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/customers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"customers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) ID of the customer to partially update"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												},
												{
													"name": "Customer not found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dateOfBirth\": \"1976-02-12\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"nidaNumber\": \"00329669991330471487\",\n  \"id\": 693,\n  \"middleName\": \"st\",\n  \"region\": \"s\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/customers/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"customers",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) ID of the customer to partially update"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												}
											]
										}
									]
								},
								{
									"name": "Get all customers with filtering and pagination",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customers?id.greaterThan=175&id.lessThan=175&id.greaterThanOrEqual=175&id.lessThanOrEqual=175&id.equals=175&id.notEquals=175&id.specified=true&id.in=628&id.in=2874&id.notIn=628&id.notIn=2874&firstName.contains=string&firstName.doesNotContain=string&firstName.equals=string&firstName.notEquals=string&firstName.specified=true&firstName.in=string&firstName.in=string&firstName.notIn=string&firstName.notIn=string&middleName.contains=string&middleName.doesNotContain=string&middleName.equals=string&middleName.notEquals=string&middleName.specified=true&middleName.in=string&middleName.in=string&middleName.notIn=string&middleName.notIn=string&lastName.contains=string&lastName.doesNotContain=string&lastName.equals=string&lastName.notEquals=string&lastName.specified=true&lastName.in=string&lastName.in=string&lastName.notIn=string&lastName.notIn=string&dateOfBirth.greaterThan=1989-05-29&dateOfBirth.lessThan=1989-05-29&dateOfBirth.greaterThanOrEqual=1989-05-29&dateOfBirth.lessThanOrEqual=1989-05-29&dateOfBirth.equals=1989-05-29&dateOfBirth.notEquals=1989-05-29&dateOfBirth.specified=true&dateOfBirth.in=1969-01-04&dateOfBirth.in=1978-01-01&dateOfBirth.notIn=1969-01-04&dateOfBirth.notIn=1978-01-01&nidaNumber.contains=string&nidaNumber.doesNotContain=string&nidaNumber.equals=string&nidaNumber.notEquals=string&nidaNumber.specified=true&nidaNumber.in=string&nidaNumber.in=string&nidaNumber.notIn=string&nidaNumber.notIn=string&registrationDate.greaterThan=2025-07-20T19:31:51.852Z&registrationDate.lessThan=2025-07-20T19:31:51.852Z&registrationDate.greaterThanOrEqual=2025-07-20T19:31:51.852Z&registrationDate.lessThanOrEqual=2025-07-20T19:31:51.852Z&registrationDate.equals=2025-07-20T19:31:51.852Z&registrationDate.notEquals=2025-07-20T19:31:51.852Z&registrationDate.specified=true&registrationDate.in=1972-10-28T22:50:19.731Z&registrationDate.in=1963-02-14T14:43:54.664Z&registrationDate.notIn=1972-10-28T22:50:19.731Z&registrationDate.notIn=1963-02-14T14:43:54.664Z&region.contains=string&region.doesNotContain=string&region.equals=string&region.notEquals=string&region.specified=true&region.in=string&region.in=string&region.notIn=string&region.notIn=string&district.contains=string&district.doesNotContain=string&district.equals=string&district.notEquals=string&district.specified=true&district.in=string&district.in=string&district.notIn=string&district.notIn=string&ward.contains=string&ward.doesNotContain=string&ward.equals=string&ward.notEquals=string&ward.specified=true&ward.in=string&ward.in=string&ward.notIn=string&ward.notIn=string&registeredById.greaterThan=175&registeredById.lessThan=175&registeredById.greaterThanOrEqual=175&registeredById.lessThanOrEqual=175&registeredById.equals=175&registeredById.notEquals=175&registeredById.specified=true&registeredById.in=628&registeredById.in=2874&registeredById.notIn=628&registeredById.notIn=2874&distinct=true&page=0&size=20&sort=string&sort=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customers"
											],
											"query": [
												{
													"key": "id.greaterThan",
													"value": "175"
												},
												{
													"key": "id.lessThan",
													"value": "175"
												},
												{
													"key": "id.greaterThanOrEqual",
													"value": "175"
												},
												{
													"key": "id.lessThanOrEqual",
													"value": "175"
												},
												{
													"key": "id.equals",
													"value": "175"
												},
												{
													"key": "id.notEquals",
													"value": "175"
												},
												{
													"key": "id.specified",
													"value": "true"
												},
												{
													"key": "id.in",
													"value": "628"
												},
												{
													"key": "id.in",
													"value": "2874"
												},
												{
													"key": "id.notIn",
													"value": "628"
												},
												{
													"key": "id.notIn",
													"value": "2874"
												},
												{
													"key": "firstName.contains",
													"value": "string"
												},
												{
													"key": "firstName.doesNotContain",
													"value": "string"
												},
												{
													"key": "firstName.equals",
													"value": "string"
												},
												{
													"key": "firstName.notEquals",
													"value": "string"
												},
												{
													"key": "firstName.specified",
													"value": "true"
												},
												{
													"key": "firstName.in",
													"value": "string"
												},
												{
													"key": "firstName.in",
													"value": "string"
												},
												{
													"key": "firstName.notIn",
													"value": "string"
												},
												{
													"key": "firstName.notIn",
													"value": "string"
												},
												{
													"key": "middleName.contains",
													"value": "string"
												},
												{
													"key": "middleName.doesNotContain",
													"value": "string"
												},
												{
													"key": "middleName.equals",
													"value": "string"
												},
												{
													"key": "middleName.notEquals",
													"value": "string"
												},
												{
													"key": "middleName.specified",
													"value": "true"
												},
												{
													"key": "middleName.in",
													"value": "string"
												},
												{
													"key": "middleName.in",
													"value": "string"
												},
												{
													"key": "middleName.notIn",
													"value": "string"
												},
												{
													"key": "middleName.notIn",
													"value": "string"
												},
												{
													"key": "lastName.contains",
													"value": "string"
												},
												{
													"key": "lastName.doesNotContain",
													"value": "string"
												},
												{
													"key": "lastName.equals",
													"value": "string"
												},
												{
													"key": "lastName.notEquals",
													"value": "string"
												},
												{
													"key": "lastName.specified",
													"value": "true"
												},
												{
													"key": "lastName.in",
													"value": "string"
												},
												{
													"key": "lastName.in",
													"value": "string"
												},
												{
													"key": "lastName.notIn",
													"value": "string"
												},
												{
													"key": "lastName.notIn",
													"value": "string"
												},
												{
													"key": "dateOfBirth.greaterThan",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.lessThan",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.greaterThanOrEqual",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.lessThanOrEqual",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.equals",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.notEquals",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.specified",
													"value": "true"
												},
												{
													"key": "dateOfBirth.in",
													"value": "1969-01-04"
												},
												{
													"key": "dateOfBirth.in",
													"value": "1978-01-01"
												},
												{
													"key": "dateOfBirth.notIn",
													"value": "1969-01-04"
												},
												{
													"key": "dateOfBirth.notIn",
													"value": "1978-01-01"
												},
												{
													"key": "nidaNumber.contains",
													"value": "string"
												},
												{
													"key": "nidaNumber.doesNotContain",
													"value": "string"
												},
												{
													"key": "nidaNumber.equals",
													"value": "string"
												},
												{
													"key": "nidaNumber.notEquals",
													"value": "string"
												},
												{
													"key": "nidaNumber.specified",
													"value": "true"
												},
												{
													"key": "nidaNumber.in",
													"value": "string"
												},
												{
													"key": "nidaNumber.in",
													"value": "string"
												},
												{
													"key": "nidaNumber.notIn",
													"value": "string"
												},
												{
													"key": "nidaNumber.notIn",
													"value": "string"
												},
												{
													"key": "registrationDate.greaterThan",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.lessThan",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.greaterThanOrEqual",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.lessThanOrEqual",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.equals",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.notEquals",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.specified",
													"value": "true"
												},
												{
													"key": "registrationDate.in",
													"value": "1972-10-28T22:50:19.731Z"
												},
												{
													"key": "registrationDate.in",
													"value": "1963-02-14T14:43:54.664Z"
												},
												{
													"key": "registrationDate.notIn",
													"value": "1972-10-28T22:50:19.731Z"
												},
												{
													"key": "registrationDate.notIn",
													"value": "1963-02-14T14:43:54.664Z"
												},
												{
													"key": "region.contains",
													"value": "string"
												},
												{
													"key": "region.doesNotContain",
													"value": "string"
												},
												{
													"key": "region.equals",
													"value": "string"
												},
												{
													"key": "region.notEquals",
													"value": "string"
												},
												{
													"key": "region.specified",
													"value": "true"
												},
												{
													"key": "region.in",
													"value": "string"
												},
												{
													"key": "region.in",
													"value": "string"
												},
												{
													"key": "region.notIn",
													"value": "string"
												},
												{
													"key": "region.notIn",
													"value": "string"
												},
												{
													"key": "district.contains",
													"value": "string"
												},
												{
													"key": "district.doesNotContain",
													"value": "string"
												},
												{
													"key": "district.equals",
													"value": "string"
												},
												{
													"key": "district.notEquals",
													"value": "string"
												},
												{
													"key": "district.specified",
													"value": "true"
												},
												{
													"key": "district.in",
													"value": "string"
												},
												{
													"key": "district.in",
													"value": "string"
												},
												{
													"key": "district.notIn",
													"value": "string"
												},
												{
													"key": "district.notIn",
													"value": "string"
												},
												{
													"key": "ward.contains",
													"value": "string"
												},
												{
													"key": "ward.doesNotContain",
													"value": "string"
												},
												{
													"key": "ward.equals",
													"value": "string"
												},
												{
													"key": "ward.notEquals",
													"value": "string"
												},
												{
													"key": "ward.specified",
													"value": "true"
												},
												{
													"key": "ward.in",
													"value": "string"
												},
												{
													"key": "ward.in",
													"value": "string"
												},
												{
													"key": "ward.notIn",
													"value": "string"
												},
												{
													"key": "ward.notIn",
													"value": "string"
												},
												{
													"key": "registeredById.greaterThan",
													"value": "175"
												},
												{
													"key": "registeredById.lessThan",
													"value": "175"
												},
												{
													"key": "registeredById.greaterThanOrEqual",
													"value": "175"
												},
												{
													"key": "registeredById.lessThanOrEqual",
													"value": "175"
												},
												{
													"key": "registeredById.equals",
													"value": "175"
												},
												{
													"key": "registeredById.notEquals",
													"value": "175"
												},
												{
													"key": "registeredById.specified",
													"value": "true"
												},
												{
													"key": "registeredById.in",
													"value": "628"
												},
												{
													"key": "registeredById.in",
													"value": "2874"
												},
												{
													"key": "registeredById.notIn",
													"value": "628"
												},
												{
													"key": "registeredById.notIn",
													"value": "2874"
												},
												{
													"key": "distinct",
													"value": "true"
												},
												{
													"key": "page",
													"value": "0",
													"description": "Zero-based page index (0..N)"
												},
												{
													"key": "size",
													"value": "20",
													"description": "The size of the page to be returned"
												},
												{
													"key": "sort",
													"value": "string",
													"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
												},
												{
													"key": "sort",
													"value": "string",
													"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
												}
											]
										},
										"description": "Retrieve a paginated list of customers with optional filtering by various criteria such as name, region, district, ward, registration date, etc."
									},
									"response": [
										{
											"name": "Customers retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers?id.greaterThan=175&id.lessThan=175&id.greaterThanOrEqual=175&id.lessThanOrEqual=175&id.equals=175&id.notEquals=175&id.specified=true&id.in=6949&id.in=2766&id.notIn=6949&id.notIn=2766&firstName.contains=string&firstName.doesNotContain=string&firstName.equals=string&firstName.notEquals=string&firstName.specified=true&firstName.in=string&firstName.in=string&firstName.notIn=string&firstName.notIn=string&middleName.contains=string&middleName.doesNotContain=string&middleName.equals=string&middleName.notEquals=string&middleName.specified=true&middleName.in=string&middleName.in=string&middleName.notIn=string&middleName.notIn=string&lastName.contains=string&lastName.doesNotContain=string&lastName.equals=string&lastName.notEquals=string&lastName.specified=true&lastName.in=string&lastName.in=string&lastName.notIn=string&lastName.notIn=string&dateOfBirth.greaterThan=1989-05-29&dateOfBirth.lessThan=1989-05-29&dateOfBirth.greaterThanOrEqual=1989-05-29&dateOfBirth.lessThanOrEqual=1989-05-29&dateOfBirth.equals=1989-05-29&dateOfBirth.notEquals=1989-05-29&dateOfBirth.specified=true&dateOfBirth.in=2000-04-04&dateOfBirth.in=2024-03-02&dateOfBirth.notIn=2000-04-04&dateOfBirth.notIn=2024-03-02&nidaNumber.contains=string&nidaNumber.doesNotContain=string&nidaNumber.equals=string&nidaNumber.notEquals=string&nidaNumber.specified=true&nidaNumber.in=string&nidaNumber.in=string&nidaNumber.notIn=string&nidaNumber.notIn=string&registrationDate.greaterThan=2025-07-20T19:31:51.852Z&registrationDate.lessThan=2025-07-20T19:31:51.852Z&registrationDate.greaterThanOrEqual=2025-07-20T19:31:51.852Z&registrationDate.lessThanOrEqual=2025-07-20T19:31:51.852Z&registrationDate.equals=2025-07-20T19:31:51.852Z&registrationDate.notEquals=2025-07-20T19:31:51.852Z&registrationDate.specified=true&registrationDate.in=1957-06-27T15:40:33.740Z&registrationDate.in=2012-12-26T06:04:53.569Z&registrationDate.notIn=1957-06-27T15:40:33.740Z&registrationDate.notIn=2012-12-26T06:04:53.569Z&region.contains=string&region.doesNotContain=string&region.equals=string&region.notEquals=string&region.specified=true&region.in=string&region.in=string&region.notIn=string&region.notIn=string&district.contains=string&district.doesNotContain=string&district.equals=string&district.notEquals=string&district.specified=true&district.in=string&district.in=string&district.notIn=string&district.notIn=string&ward.contains=string&ward.doesNotContain=string&ward.equals=string&ward.notEquals=string&ward.specified=true&ward.in=string&ward.in=string&ward.notIn=string&ward.notIn=string&registeredById.greaterThan=175&registeredById.lessThan=175&registeredById.greaterThanOrEqual=175&registeredById.lessThanOrEqual=175&registeredById.equals=175&registeredById.notEquals=175&registeredById.specified=true&registeredById.in=6949&registeredById.in=2766&registeredById.notIn=6949&registeredById.notIn=2766&distinct=true&page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers"
													],
													"query": [
														{
															"key": "id.greaterThan",
															"value": "175"
														},
														{
															"key": "id.lessThan",
															"value": "175"
														},
														{
															"key": "id.greaterThanOrEqual",
															"value": "175"
														},
														{
															"key": "id.lessThanOrEqual",
															"value": "175"
														},
														{
															"key": "id.equals",
															"value": "175"
														},
														{
															"key": "id.notEquals",
															"value": "175"
														},
														{
															"key": "id.specified",
															"value": "true"
														},
														{
															"key": "id.in",
															"value": "6949"
														},
														{
															"key": "id.in",
															"value": "2766"
														},
														{
															"key": "id.notIn",
															"value": "6949"
														},
														{
															"key": "id.notIn",
															"value": "2766"
														},
														{
															"key": "firstName.contains",
															"value": "string"
														},
														{
															"key": "firstName.doesNotContain",
															"value": "string"
														},
														{
															"key": "firstName.equals",
															"value": "string"
														},
														{
															"key": "firstName.notEquals",
															"value": "string"
														},
														{
															"key": "firstName.specified",
															"value": "true"
														},
														{
															"key": "firstName.in",
															"value": "string"
														},
														{
															"key": "firstName.in",
															"value": "string"
														},
														{
															"key": "firstName.notIn",
															"value": "string"
														},
														{
															"key": "firstName.notIn",
															"value": "string"
														},
														{
															"key": "middleName.contains",
															"value": "string"
														},
														{
															"key": "middleName.doesNotContain",
															"value": "string"
														},
														{
															"key": "middleName.equals",
															"value": "string"
														},
														{
															"key": "middleName.notEquals",
															"value": "string"
														},
														{
															"key": "middleName.specified",
															"value": "true"
														},
														{
															"key": "middleName.in",
															"value": "string"
														},
														{
															"key": "middleName.in",
															"value": "string"
														},
														{
															"key": "middleName.notIn",
															"value": "string"
														},
														{
															"key": "middleName.notIn",
															"value": "string"
														},
														{
															"key": "lastName.contains",
															"value": "string"
														},
														{
															"key": "lastName.doesNotContain",
															"value": "string"
														},
														{
															"key": "lastName.equals",
															"value": "string"
														},
														{
															"key": "lastName.notEquals",
															"value": "string"
														},
														{
															"key": "lastName.specified",
															"value": "true"
														},
														{
															"key": "lastName.in",
															"value": "string"
														},
														{
															"key": "lastName.in",
															"value": "string"
														},
														{
															"key": "lastName.notIn",
															"value": "string"
														},
														{
															"key": "lastName.notIn",
															"value": "string"
														},
														{
															"key": "dateOfBirth.greaterThan",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.lessThan",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.greaterThanOrEqual",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.lessThanOrEqual",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.equals",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.notEquals",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.specified",
															"value": "true"
														},
														{
															"key": "dateOfBirth.in",
															"value": "2000-04-04"
														},
														{
															"key": "dateOfBirth.in",
															"value": "2024-03-02"
														},
														{
															"key": "dateOfBirth.notIn",
															"value": "2000-04-04"
														},
														{
															"key": "dateOfBirth.notIn",
															"value": "2024-03-02"
														},
														{
															"key": "nidaNumber.contains",
															"value": "string"
														},
														{
															"key": "nidaNumber.doesNotContain",
															"value": "string"
														},
														{
															"key": "nidaNumber.equals",
															"value": "string"
														},
														{
															"key": "nidaNumber.notEquals",
															"value": "string"
														},
														{
															"key": "nidaNumber.specified",
															"value": "true"
														},
														{
															"key": "nidaNumber.in",
															"value": "string"
														},
														{
															"key": "nidaNumber.in",
															"value": "string"
														},
														{
															"key": "nidaNumber.notIn",
															"value": "string"
														},
														{
															"key": "nidaNumber.notIn",
															"value": "string"
														},
														{
															"key": "registrationDate.greaterThan",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.lessThan",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.greaterThanOrEqual",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.lessThanOrEqual",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.equals",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.notEquals",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.specified",
															"value": "true"
														},
														{
															"key": "registrationDate.in",
															"value": "1957-06-27T15:40:33.740Z"
														},
														{
															"key": "registrationDate.in",
															"value": "2012-12-26T06:04:53.569Z"
														},
														{
															"key": "registrationDate.notIn",
															"value": "1957-06-27T15:40:33.740Z"
														},
														{
															"key": "registrationDate.notIn",
															"value": "2012-12-26T06:04:53.569Z"
														},
														{
															"key": "region.contains",
															"value": "string"
														},
														{
															"key": "region.doesNotContain",
															"value": "string"
														},
														{
															"key": "region.equals",
															"value": "string"
														},
														{
															"key": "region.notEquals",
															"value": "string"
														},
														{
															"key": "region.specified",
															"value": "true"
														},
														{
															"key": "region.in",
															"value": "string"
														},
														{
															"key": "region.in",
															"value": "string"
														},
														{
															"key": "region.notIn",
															"value": "string"
														},
														{
															"key": "region.notIn",
															"value": "string"
														},
														{
															"key": "district.contains",
															"value": "string"
														},
														{
															"key": "district.doesNotContain",
															"value": "string"
														},
														{
															"key": "district.equals",
															"value": "string"
														},
														{
															"key": "district.notEquals",
															"value": "string"
														},
														{
															"key": "district.specified",
															"value": "true"
														},
														{
															"key": "district.in",
															"value": "string"
														},
														{
															"key": "district.in",
															"value": "string"
														},
														{
															"key": "district.notIn",
															"value": "string"
														},
														{
															"key": "district.notIn",
															"value": "string"
														},
														{
															"key": "ward.contains",
															"value": "string"
														},
														{
															"key": "ward.doesNotContain",
															"value": "string"
														},
														{
															"key": "ward.equals",
															"value": "string"
														},
														{
															"key": "ward.notEquals",
															"value": "string"
														},
														{
															"key": "ward.specified",
															"value": "true"
														},
														{
															"key": "ward.in",
															"value": "string"
														},
														{
															"key": "ward.in",
															"value": "string"
														},
														{
															"key": "ward.notIn",
															"value": "string"
														},
														{
															"key": "ward.notIn",
															"value": "string"
														},
														{
															"key": "registeredById.greaterThan",
															"value": "175"
														},
														{
															"key": "registeredById.lessThan",
															"value": "175"
														},
														{
															"key": "registeredById.greaterThanOrEqual",
															"value": "175"
														},
														{
															"key": "registeredById.lessThanOrEqual",
															"value": "175"
														},
														{
															"key": "registeredById.equals",
															"value": "175"
														},
														{
															"key": "registeredById.notEquals",
															"value": "175"
														},
														{
															"key": "registeredById.specified",
															"value": "true"
														},
														{
															"key": "registeredById.in",
															"value": "6949"
														},
														{
															"key": "registeredById.in",
															"value": "2766"
														},
														{
															"key": "registeredById.notIn",
															"value": "6949"
														},
														{
															"key": "registeredById.notIn",
															"value": "2766"
														},
														{
															"key": "distinct",
															"value": "true"
														},
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "string"
														},
														{
															"key": "sort",
															"value": "string"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Customers retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"firstName\": \"John\",\n      \"middleName\": \"Michael\",\n      \"lastName\": \"Doe\",\n      \"dateOfBirth\": \"1990-05-15\",\n      \"nidaNumber\": \"19900515123456789\",\n      \"registrationDate\": \"2024-01-15T10:30:00Z\",\n      \"region\": \"Dar es Salaam\",\n      \"district\": \"Kinondoni\",\n      \"ward\": \"Mikocheni\",\n      \"registeredById\": 2\n    },\n    {\n      \"id\": 2,\n      \"firstName\": \"Jane\",\n      \"middleName\": \"Elizabeth\",\n      \"lastName\": \"Smith\",\n      \"dateOfBirth\": \"1992-08-20\",\n      \"nidaNumber\": \"19920820987654321\",\n      \"registrationDate\": \"2024-01-16T14:15:00Z\",\n      \"region\": \"Dar es Salaam\",\n      \"district\": \"Kinondoni\",\n      \"ward\": \"Sinza\",\n      \"registeredById\": 2\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a new customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function randomDate(start, end) {",
													"    const d = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));",
													"    return d.toISOString().split('T')[0]; ",
													"}",
													"",
													"const dob = randomDate(new Date(1970, 0, 1), new Date(2005, 11, 31));",
													"",
													"function generateNida(dob) {",
													"    const dobPart = dob.replace(/-/g, \"\");",
													"    const timestampPart = Date.now().toString().slice(-8); ",
													"    const randomPart = Math.floor(1000 + Math.random() * 9000);",
													"    return dobPart + timestampPart + randomPart;",
													"}",
													"",
													"const nidaNumber = generateNida(dob);",
													"",
													"pm.variables.set(\"dateOfBirth\", dob);",
													"pm.variables.set(\"nidaNumber\", nidaNumber);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIwNzIyMDE1MzIwIiwiZXhwIjoxNzYxNzIzNzUyLCJhdXRoIjoiUk9MRV9BR0VOVCIsImlhdCI6MTc1OTEzMTc1MiwidXNlcklkIjozNjMyMjcwNTg3Mzk4Njc2NDh9.xIOOXql1owm3tlKKgUqem8qbo8Pptvn76d5DIMaGeAaXRKSJdkgGOPJAXfmz4_WTXFOpBO94FpVnBvME1WySQA",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"dateOfBirth\": \"{{dateOfBirth}}\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"nidaNumber\": \"{{nidaNumber}}\",\n    \"middleName\": \"{{$randomLastName}}\",\n    \"region\": \"{{$randomStreetName}}\",\n    \"district\": \"{{$randomCity}}\",\n    \"ward\": \"{{$randomCity}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customers"
											]
										},
										"description": "Register a new customer in the system with personal details, location information, and associated registration agent."
									},
									"response": [
										{
											"name": "Customer created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateOfBirth\": \"1976-02-12\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"nidaNumber\": \"00329669991330471487\",\n  \"id\": 693,\n  \"middleName\": \"st\",\n  \"region\": \"s\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"CREATED\",\n  \"message\": \"Customer created successfully\",\n  \"data\": {\n    \"id\": 1,\n    \"firstName\": \"John\",\n    \"middleName\": \"Michael\",\n    \"lastName\": \"Doe\",\n    \"dateOfBirth\": \"1990-05-15\",\n    \"nidaNumber\": \"19900515123456789\",\n    \"registrationDate\": \"2024-01-15T10:30:00Z\",\n    \"region\": \"Dar es Salaam\",\n    \"district\": \"Kinondoni\",\n    \"ward\": \"Mikocheni\",\n    \"registeredById\": 2\n  }\n}"
										},
										{
											"name": "Bad request - Customer data is invalid or customer already has an ID",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateOfBirth\": \"1976-02-12\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"nidaNumber\": \"00329669991330471487\",\n  \"id\": 693,\n  \"middleName\": \"st\",\n  \"region\": \"s\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"Bad Request\",\n  \"message\": \"A new customer cannot already have an ID\",\n  \"path\": \"/api/v1/customers\"\n}"
										},
										{
											"name": "Validation failed - Required fields are missing or invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dateOfBirth\": \"1976-02-12\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"nidaNumber\": \"00329669991330471487\",\n  \"id\": 693,\n  \"middleName\": \"st\",\n  \"region\": \"s\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"Validation Failed\",\n  \"message\": \"firstName is required, nidaNumber must be valid\"\n}"
										}
									]
								},
								{
									"name": "Reindex all customers",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customers/_reindex",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customers",
												"_reindex"
											]
										},
										"description": "Reindex all customer records from database to Elasticsearch. Use this for search index maintenance."
									},
									"response": [
										{
											"name": "Reindexing completed successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/_reindex",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														"_reindex"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {},\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"1962-12-25T07:02:50.554Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1958-09-23T04:17:55.669Z\",\n  \"path\": \"string\"\n}"
										}
									]
								},
								{
									"name": "Count customers with filtering",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customers/count?id.greaterThan=175&id.lessThan=175&id.greaterThanOrEqual=175&id.lessThanOrEqual=175&id.equals=175&id.notEquals=175&id.specified=true&id.in=628&id.in=2874&id.notIn=628&id.notIn=2874&firstName.contains=string&firstName.doesNotContain=string&firstName.equals=string&firstName.notEquals=string&firstName.specified=true&firstName.in=string&firstName.in=string&firstName.notIn=string&firstName.notIn=string&middleName.contains=string&middleName.doesNotContain=string&middleName.equals=string&middleName.notEquals=string&middleName.specified=true&middleName.in=string&middleName.in=string&middleName.notIn=string&middleName.notIn=string&lastName.contains=string&lastName.doesNotContain=string&lastName.equals=string&lastName.notEquals=string&lastName.specified=true&lastName.in=string&lastName.in=string&lastName.notIn=string&lastName.notIn=string&dateOfBirth.greaterThan=1989-05-29&dateOfBirth.lessThan=1989-05-29&dateOfBirth.greaterThanOrEqual=1989-05-29&dateOfBirth.lessThanOrEqual=1989-05-29&dateOfBirth.equals=1989-05-29&dateOfBirth.notEquals=1989-05-29&dateOfBirth.specified=true&dateOfBirth.in=1969-01-04&dateOfBirth.in=1978-01-01&dateOfBirth.notIn=1969-01-04&dateOfBirth.notIn=1978-01-01&nidaNumber.contains=string&nidaNumber.doesNotContain=string&nidaNumber.equals=string&nidaNumber.notEquals=string&nidaNumber.specified=true&nidaNumber.in=string&nidaNumber.in=string&nidaNumber.notIn=string&nidaNumber.notIn=string&registrationDate.greaterThan=2025-07-20T19:31:51.852Z&registrationDate.lessThan=2025-07-20T19:31:51.852Z&registrationDate.greaterThanOrEqual=2025-07-20T19:31:51.852Z&registrationDate.lessThanOrEqual=2025-07-20T19:31:51.852Z&registrationDate.equals=2025-07-20T19:31:51.852Z&registrationDate.notEquals=2025-07-20T19:31:51.852Z&registrationDate.specified=true&registrationDate.in=1972-10-28T22:50:19.731Z&registrationDate.in=1963-02-14T14:43:54.664Z&registrationDate.notIn=1972-10-28T22:50:19.731Z&registrationDate.notIn=1963-02-14T14:43:54.664Z&region.contains=string&region.doesNotContain=string&region.equals=string&region.notEquals=string&region.specified=true&region.in=string&region.in=string&region.notIn=string&region.notIn=string&district.contains=string&district.doesNotContain=string&district.equals=string&district.notEquals=string&district.specified=true&district.in=string&district.in=string&district.notIn=string&district.notIn=string&ward.contains=string&ward.doesNotContain=string&ward.equals=string&ward.notEquals=string&ward.specified=true&ward.in=string&ward.in=string&ward.notIn=string&ward.notIn=string&registeredById.greaterThan=175&registeredById.lessThan=175&registeredById.greaterThanOrEqual=175&registeredById.lessThanOrEqual=175&registeredById.equals=175&registeredById.notEquals=175&registeredById.specified=true&registeredById.in=628&registeredById.in=2874&registeredById.notIn=628&registeredById.notIn=2874&distinct=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customers",
												"count"
											],
											"query": [
												{
													"key": "id.greaterThan",
													"value": "175"
												},
												{
													"key": "id.lessThan",
													"value": "175"
												},
												{
													"key": "id.greaterThanOrEqual",
													"value": "175"
												},
												{
													"key": "id.lessThanOrEqual",
													"value": "175"
												},
												{
													"key": "id.equals",
													"value": "175"
												},
												{
													"key": "id.notEquals",
													"value": "175"
												},
												{
													"key": "id.specified",
													"value": "true"
												},
												{
													"key": "id.in",
													"value": "628"
												},
												{
													"key": "id.in",
													"value": "2874"
												},
												{
													"key": "id.notIn",
													"value": "628"
												},
												{
													"key": "id.notIn",
													"value": "2874"
												},
												{
													"key": "firstName.contains",
													"value": "string"
												},
												{
													"key": "firstName.doesNotContain",
													"value": "string"
												},
												{
													"key": "firstName.equals",
													"value": "string"
												},
												{
													"key": "firstName.notEquals",
													"value": "string"
												},
												{
													"key": "firstName.specified",
													"value": "true"
												},
												{
													"key": "firstName.in",
													"value": "string"
												},
												{
													"key": "firstName.in",
													"value": "string"
												},
												{
													"key": "firstName.notIn",
													"value": "string"
												},
												{
													"key": "firstName.notIn",
													"value": "string"
												},
												{
													"key": "middleName.contains",
													"value": "string"
												},
												{
													"key": "middleName.doesNotContain",
													"value": "string"
												},
												{
													"key": "middleName.equals",
													"value": "string"
												},
												{
													"key": "middleName.notEquals",
													"value": "string"
												},
												{
													"key": "middleName.specified",
													"value": "true"
												},
												{
													"key": "middleName.in",
													"value": "string"
												},
												{
													"key": "middleName.in",
													"value": "string"
												},
												{
													"key": "middleName.notIn",
													"value": "string"
												},
												{
													"key": "middleName.notIn",
													"value": "string"
												},
												{
													"key": "lastName.contains",
													"value": "string"
												},
												{
													"key": "lastName.doesNotContain",
													"value": "string"
												},
												{
													"key": "lastName.equals",
													"value": "string"
												},
												{
													"key": "lastName.notEquals",
													"value": "string"
												},
												{
													"key": "lastName.specified",
													"value": "true"
												},
												{
													"key": "lastName.in",
													"value": "string"
												},
												{
													"key": "lastName.in",
													"value": "string"
												},
												{
													"key": "lastName.notIn",
													"value": "string"
												},
												{
													"key": "lastName.notIn",
													"value": "string"
												},
												{
													"key": "dateOfBirth.greaterThan",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.lessThan",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.greaterThanOrEqual",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.lessThanOrEqual",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.equals",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.notEquals",
													"value": "1989-05-29"
												},
												{
													"key": "dateOfBirth.specified",
													"value": "true"
												},
												{
													"key": "dateOfBirth.in",
													"value": "1969-01-04"
												},
												{
													"key": "dateOfBirth.in",
													"value": "1978-01-01"
												},
												{
													"key": "dateOfBirth.notIn",
													"value": "1969-01-04"
												},
												{
													"key": "dateOfBirth.notIn",
													"value": "1978-01-01"
												},
												{
													"key": "nidaNumber.contains",
													"value": "string"
												},
												{
													"key": "nidaNumber.doesNotContain",
													"value": "string"
												},
												{
													"key": "nidaNumber.equals",
													"value": "string"
												},
												{
													"key": "nidaNumber.notEquals",
													"value": "string"
												},
												{
													"key": "nidaNumber.specified",
													"value": "true"
												},
												{
													"key": "nidaNumber.in",
													"value": "string"
												},
												{
													"key": "nidaNumber.in",
													"value": "string"
												},
												{
													"key": "nidaNumber.notIn",
													"value": "string"
												},
												{
													"key": "nidaNumber.notIn",
													"value": "string"
												},
												{
													"key": "registrationDate.greaterThan",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.lessThan",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.greaterThanOrEqual",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.lessThanOrEqual",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.equals",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.notEquals",
													"value": "2025-07-20T19:31:51.852Z"
												},
												{
													"key": "registrationDate.specified",
													"value": "true"
												},
												{
													"key": "registrationDate.in",
													"value": "1972-10-28T22:50:19.731Z"
												},
												{
													"key": "registrationDate.in",
													"value": "1963-02-14T14:43:54.664Z"
												},
												{
													"key": "registrationDate.notIn",
													"value": "1972-10-28T22:50:19.731Z"
												},
												{
													"key": "registrationDate.notIn",
													"value": "1963-02-14T14:43:54.664Z"
												},
												{
													"key": "region.contains",
													"value": "string"
												},
												{
													"key": "region.doesNotContain",
													"value": "string"
												},
												{
													"key": "region.equals",
													"value": "string"
												},
												{
													"key": "region.notEquals",
													"value": "string"
												},
												{
													"key": "region.specified",
													"value": "true"
												},
												{
													"key": "region.in",
													"value": "string"
												},
												{
													"key": "region.in",
													"value": "string"
												},
												{
													"key": "region.notIn",
													"value": "string"
												},
												{
													"key": "region.notIn",
													"value": "string"
												},
												{
													"key": "district.contains",
													"value": "string"
												},
												{
													"key": "district.doesNotContain",
													"value": "string"
												},
												{
													"key": "district.equals",
													"value": "string"
												},
												{
													"key": "district.notEquals",
													"value": "string"
												},
												{
													"key": "district.specified",
													"value": "true"
												},
												{
													"key": "district.in",
													"value": "string"
												},
												{
													"key": "district.in",
													"value": "string"
												},
												{
													"key": "district.notIn",
													"value": "string"
												},
												{
													"key": "district.notIn",
													"value": "string"
												},
												{
													"key": "ward.contains",
													"value": "string"
												},
												{
													"key": "ward.doesNotContain",
													"value": "string"
												},
												{
													"key": "ward.equals",
													"value": "string"
												},
												{
													"key": "ward.notEquals",
													"value": "string"
												},
												{
													"key": "ward.specified",
													"value": "true"
												},
												{
													"key": "ward.in",
													"value": "string"
												},
												{
													"key": "ward.in",
													"value": "string"
												},
												{
													"key": "ward.notIn",
													"value": "string"
												},
												{
													"key": "ward.notIn",
													"value": "string"
												},
												{
													"key": "registeredById.greaterThan",
													"value": "175"
												},
												{
													"key": "registeredById.lessThan",
													"value": "175"
												},
												{
													"key": "registeredById.greaterThanOrEqual",
													"value": "175"
												},
												{
													"key": "registeredById.lessThanOrEqual",
													"value": "175"
												},
												{
													"key": "registeredById.equals",
													"value": "175"
												},
												{
													"key": "registeredById.notEquals",
													"value": "175"
												},
												{
													"key": "registeredById.specified",
													"value": "true"
												},
												{
													"key": "registeredById.in",
													"value": "628"
												},
												{
													"key": "registeredById.in",
													"value": "2874"
												},
												{
													"key": "registeredById.notIn",
													"value": "628"
												},
												{
													"key": "registeredById.notIn",
													"value": "2874"
												},
												{
													"key": "distinct",
													"value": "true"
												}
											]
										},
										"description": "Get the total number of customers that match the specified filtering criteria. Useful for pagination and statistics."
									},
									"response": [
										{
											"name": "Customer count retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/count?id.greaterThan=175&id.lessThan=175&id.greaterThanOrEqual=175&id.lessThanOrEqual=175&id.equals=175&id.notEquals=175&id.specified=true&id.in=6949&id.in=2766&id.notIn=6949&id.notIn=2766&firstName.contains=string&firstName.doesNotContain=string&firstName.equals=string&firstName.notEquals=string&firstName.specified=true&firstName.in=string&firstName.in=string&firstName.notIn=string&firstName.notIn=string&middleName.contains=string&middleName.doesNotContain=string&middleName.equals=string&middleName.notEquals=string&middleName.specified=true&middleName.in=string&middleName.in=string&middleName.notIn=string&middleName.notIn=string&lastName.contains=string&lastName.doesNotContain=string&lastName.equals=string&lastName.notEquals=string&lastName.specified=true&lastName.in=string&lastName.in=string&lastName.notIn=string&lastName.notIn=string&dateOfBirth.greaterThan=1989-05-29&dateOfBirth.lessThan=1989-05-29&dateOfBirth.greaterThanOrEqual=1989-05-29&dateOfBirth.lessThanOrEqual=1989-05-29&dateOfBirth.equals=1989-05-29&dateOfBirth.notEquals=1989-05-29&dateOfBirth.specified=true&dateOfBirth.in=2000-04-04&dateOfBirth.in=2024-03-02&dateOfBirth.notIn=2000-04-04&dateOfBirth.notIn=2024-03-02&nidaNumber.contains=string&nidaNumber.doesNotContain=string&nidaNumber.equals=string&nidaNumber.notEquals=string&nidaNumber.specified=true&nidaNumber.in=string&nidaNumber.in=string&nidaNumber.notIn=string&nidaNumber.notIn=string&registrationDate.greaterThan=2025-07-20T19:31:51.852Z&registrationDate.lessThan=2025-07-20T19:31:51.852Z&registrationDate.greaterThanOrEqual=2025-07-20T19:31:51.852Z&registrationDate.lessThanOrEqual=2025-07-20T19:31:51.852Z&registrationDate.equals=2025-07-20T19:31:51.852Z&registrationDate.notEquals=2025-07-20T19:31:51.852Z&registrationDate.specified=true&registrationDate.in=1957-06-27T15:40:33.740Z&registrationDate.in=2012-12-26T06:04:53.569Z&registrationDate.notIn=1957-06-27T15:40:33.740Z&registrationDate.notIn=2012-12-26T06:04:53.569Z&region.contains=string&region.doesNotContain=string&region.equals=string&region.notEquals=string&region.specified=true&region.in=string&region.in=string&region.notIn=string&region.notIn=string&district.contains=string&district.doesNotContain=string&district.equals=string&district.notEquals=string&district.specified=true&district.in=string&district.in=string&district.notIn=string&district.notIn=string&ward.contains=string&ward.doesNotContain=string&ward.equals=string&ward.notEquals=string&ward.specified=true&ward.in=string&ward.in=string&ward.notIn=string&ward.notIn=string&registeredById.greaterThan=175&registeredById.lessThan=175&registeredById.greaterThanOrEqual=175&registeredById.lessThanOrEqual=175&registeredById.equals=175&registeredById.notEquals=175&registeredById.specified=true&registeredById.in=6949&registeredById.in=2766&registeredById.notIn=6949&registeredById.notIn=2766&distinct=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														"count"
													],
													"query": [
														{
															"key": "id.greaterThan",
															"value": "175"
														},
														{
															"key": "id.lessThan",
															"value": "175"
														},
														{
															"key": "id.greaterThanOrEqual",
															"value": "175"
														},
														{
															"key": "id.lessThanOrEqual",
															"value": "175"
														},
														{
															"key": "id.equals",
															"value": "175"
														},
														{
															"key": "id.notEquals",
															"value": "175"
														},
														{
															"key": "id.specified",
															"value": "true"
														},
														{
															"key": "id.in",
															"value": "6949"
														},
														{
															"key": "id.in",
															"value": "2766"
														},
														{
															"key": "id.notIn",
															"value": "6949"
														},
														{
															"key": "id.notIn",
															"value": "2766"
														},
														{
															"key": "firstName.contains",
															"value": "string"
														},
														{
															"key": "firstName.doesNotContain",
															"value": "string"
														},
														{
															"key": "firstName.equals",
															"value": "string"
														},
														{
															"key": "firstName.notEquals",
															"value": "string"
														},
														{
															"key": "firstName.specified",
															"value": "true"
														},
														{
															"key": "firstName.in",
															"value": "string"
														},
														{
															"key": "firstName.in",
															"value": "string"
														},
														{
															"key": "firstName.notIn",
															"value": "string"
														},
														{
															"key": "firstName.notIn",
															"value": "string"
														},
														{
															"key": "middleName.contains",
															"value": "string"
														},
														{
															"key": "middleName.doesNotContain",
															"value": "string"
														},
														{
															"key": "middleName.equals",
															"value": "string"
														},
														{
															"key": "middleName.notEquals",
															"value": "string"
														},
														{
															"key": "middleName.specified",
															"value": "true"
														},
														{
															"key": "middleName.in",
															"value": "string"
														},
														{
															"key": "middleName.in",
															"value": "string"
														},
														{
															"key": "middleName.notIn",
															"value": "string"
														},
														{
															"key": "middleName.notIn",
															"value": "string"
														},
														{
															"key": "lastName.contains",
															"value": "string"
														},
														{
															"key": "lastName.doesNotContain",
															"value": "string"
														},
														{
															"key": "lastName.equals",
															"value": "string"
														},
														{
															"key": "lastName.notEquals",
															"value": "string"
														},
														{
															"key": "lastName.specified",
															"value": "true"
														},
														{
															"key": "lastName.in",
															"value": "string"
														},
														{
															"key": "lastName.in",
															"value": "string"
														},
														{
															"key": "lastName.notIn",
															"value": "string"
														},
														{
															"key": "lastName.notIn",
															"value": "string"
														},
														{
															"key": "dateOfBirth.greaterThan",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.lessThan",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.greaterThanOrEqual",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.lessThanOrEqual",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.equals",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.notEquals",
															"value": "1989-05-29"
														},
														{
															"key": "dateOfBirth.specified",
															"value": "true"
														},
														{
															"key": "dateOfBirth.in",
															"value": "2000-04-04"
														},
														{
															"key": "dateOfBirth.in",
															"value": "2024-03-02"
														},
														{
															"key": "dateOfBirth.notIn",
															"value": "2000-04-04"
														},
														{
															"key": "dateOfBirth.notIn",
															"value": "2024-03-02"
														},
														{
															"key": "nidaNumber.contains",
															"value": "string"
														},
														{
															"key": "nidaNumber.doesNotContain",
															"value": "string"
														},
														{
															"key": "nidaNumber.equals",
															"value": "string"
														},
														{
															"key": "nidaNumber.notEquals",
															"value": "string"
														},
														{
															"key": "nidaNumber.specified",
															"value": "true"
														},
														{
															"key": "nidaNumber.in",
															"value": "string"
														},
														{
															"key": "nidaNumber.in",
															"value": "string"
														},
														{
															"key": "nidaNumber.notIn",
															"value": "string"
														},
														{
															"key": "nidaNumber.notIn",
															"value": "string"
														},
														{
															"key": "registrationDate.greaterThan",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.lessThan",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.greaterThanOrEqual",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.lessThanOrEqual",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.equals",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.notEquals",
															"value": "2025-07-20T19:31:51.852Z"
														},
														{
															"key": "registrationDate.specified",
															"value": "true"
														},
														{
															"key": "registrationDate.in",
															"value": "1957-06-27T15:40:33.740Z"
														},
														{
															"key": "registrationDate.in",
															"value": "2012-12-26T06:04:53.569Z"
														},
														{
															"key": "registrationDate.notIn",
															"value": "1957-06-27T15:40:33.740Z"
														},
														{
															"key": "registrationDate.notIn",
															"value": "2012-12-26T06:04:53.569Z"
														},
														{
															"key": "region.contains",
															"value": "string"
														},
														{
															"key": "region.doesNotContain",
															"value": "string"
														},
														{
															"key": "region.equals",
															"value": "string"
														},
														{
															"key": "region.notEquals",
															"value": "string"
														},
														{
															"key": "region.specified",
															"value": "true"
														},
														{
															"key": "region.in",
															"value": "string"
														},
														{
															"key": "region.in",
															"value": "string"
														},
														{
															"key": "region.notIn",
															"value": "string"
														},
														{
															"key": "region.notIn",
															"value": "string"
														},
														{
															"key": "district.contains",
															"value": "string"
														},
														{
															"key": "district.doesNotContain",
															"value": "string"
														},
														{
															"key": "district.equals",
															"value": "string"
														},
														{
															"key": "district.notEquals",
															"value": "string"
														},
														{
															"key": "district.specified",
															"value": "true"
														},
														{
															"key": "district.in",
															"value": "string"
														},
														{
															"key": "district.in",
															"value": "string"
														},
														{
															"key": "district.notIn",
															"value": "string"
														},
														{
															"key": "district.notIn",
															"value": "string"
														},
														{
															"key": "ward.contains",
															"value": "string"
														},
														{
															"key": "ward.doesNotContain",
															"value": "string"
														},
														{
															"key": "ward.equals",
															"value": "string"
														},
														{
															"key": "ward.notEquals",
															"value": "string"
														},
														{
															"key": "ward.specified",
															"value": "true"
														},
														{
															"key": "ward.in",
															"value": "string"
														},
														{
															"key": "ward.in",
															"value": "string"
														},
														{
															"key": "ward.notIn",
															"value": "string"
														},
														{
															"key": "ward.notIn",
															"value": "string"
														},
														{
															"key": "registeredById.greaterThan",
															"value": "175"
														},
														{
															"key": "registeredById.lessThan",
															"value": "175"
														},
														{
															"key": "registeredById.greaterThanOrEqual",
															"value": "175"
														},
														{
															"key": "registeredById.lessThanOrEqual",
															"value": "175"
														},
														{
															"key": "registeredById.equals",
															"value": "175"
														},
														{
															"key": "registeredById.notEquals",
															"value": "175"
														},
														{
															"key": "registeredById.specified",
															"value": "true"
														},
														{
															"key": "registeredById.in",
															"value": "6949"
														},
														{
															"key": "registeredById.in",
															"value": "2766"
														},
														{
															"key": "registeredById.notIn",
															"value": "6949"
														},
														{
															"key": "registeredById.notIn",
															"value": "2766"
														},
														{
															"key": "distinct",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Customer count retrieved successfully\",\n  \"data\": 150\n}"
										}
									]
								},
								{
									"name": "Search customers with Elasticsearch",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customers/_search?query=John Doe&page=0&size=20&sort=string&sort=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customers",
												"_search"
											],
											"query": [
												{
													"key": "query",
													"value": "John Doe",
													"description": "(Required) Search query string (supports full-text search)"
												},
												{
													"key": "page",
													"value": "0",
													"description": "Zero-based page index (0..N)"
												},
												{
													"key": "size",
													"value": "20",
													"description": "The size of the page to be returned"
												},
												{
													"key": "sort",
													"value": "string",
													"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
												},
												{
													"key": "sort",
													"value": "string",
													"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
												}
											]
										},
										"description": "Perform full-text search across customer records using Elasticsearch. Supports searching by name, NIDA number, location, and other fields."
									},
									"response": [
										{
											"name": "Search completed successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/_search?query=John Doe&page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														"_search"
													],
													"query": [
														{
															"key": "query",
															"value": "John Doe"
														},
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "string"
														},
														{
															"key": "sort",
															"value": "string"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Customer search completed successfully\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"region\": \"Dar es Salaam\",\n      \"district\": \"Kinondoni\"\n    }\n  ]\n}"
										},
										{
											"name": "Elasticsearch error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/_search?query=John Doe&page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														"_search"
													],
													"query": [
														{
															"key": "query",
															"value": "John Doe"
														},
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "string"
														},
														{
															"key": "sort",
															"value": "string"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								},
								{
									"name": "Get autocomplete suggestions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customers/_autocomplete?query=joh&limit=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customers",
												"_autocomplete"
											],
											"query": [
												{
													"key": "query",
													"value": "joh",
													"description": "(Required) Partial query for autocomplete"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Maximum number of suggestions"
												}
											]
										},
										"description": "Get intelligent autocomplete suggestions for customer search queries."
									},
									"response": [
										{
											"name": "Autocomplete suggestions retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/_autocomplete?query=joh&limit=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														"_autocomplete"
													],
													"query": [
														{
															"key": "query",
															"value": "joh"
														},
														{
															"key": "limit",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {},\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"1962-12-25T07:02:50.554Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1958-09-23T04:17:55.669Z\",\n  \"path\": \"string\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "agents",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get agent by ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Agent ID to retrieve"
														}
													]
												},
												"description": "Retrieve detailed information about a specific agent by their unique identifier."
											},
											"response": [
												{
													"name": "Agent found and retrieved successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to retrieve"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Agent retrieved successfully\",\n  \"data\": {\n    \"id\": 1,\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phoneNumber\": \"+255123456789\",\n    \"region\": \"Dar es Salaam\",\n    \"district\": \"Kinondoni\",\n    \"ward\": \"Mikocheni\",\n    \"userId\": 123\n  }\n}"
												},
												{
													"name": "Agent not found with provided ID",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to retrieve"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"message\": \"Agent not found with id: 999\"\n}"
												}
											]
										},
										{
											"name": "Update an existing agent",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"phoneNumber\": \"0792303245\",\n  \"status\": \"SUSPENDED\",\n  \"userId\": 9627,\n  \"id\": 3023,\n  \"region\": \"str\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Agent ID to update"
														}
													]
												},
												"description": "Update all fields of an existing agent. The entire agent object must be provided. Use PATCH for partial updates."
											},
											"response": [
												{
													"name": "Agent updated successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"phoneNumber\": \"0792303245\",\n  \"status\": \"SUSPENDED\",\n  \"userId\": 9627,\n  \"id\": 3023,\n  \"region\": \"str\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to update"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Agent updated successfully\",\n  \"data\": {\n    \"id\": 1,\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@updated.com\",\n    \"phoneNumber\": \"+255987654321\",\n    \"region\": \"Arusha\",\n    \"district\": \"Arusha Urban\",\n    \"ward\": \"Central\",\n    \"userId\": 123\n  }\n}"
												},
												{
													"name": "Bad request - Invalid ID or data validation errors",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"phoneNumber\": \"0792303245\",\n  \"status\": \"SUSPENDED\",\n  \"userId\": 9627,\n  \"id\": 3023,\n  \"region\": \"str\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to update"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												},
												{
													"name": "Agent not found with provided ID",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"phoneNumber\": \"0792303245\",\n  \"status\": \"SUSPENDED\",\n  \"userId\": 9627,\n  \"id\": 3023,\n  \"region\": \"str\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to update"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												}
											]
										},
										{
											"name": "Delete an agent",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Agent ID to delete (permanent action - cannot be undone)"
														}
													]
												},
												"description": "Permanently delete an agent from the system. This action cannot be undone. Consider the impact on associated customer registrations."
											},
											"response": [
												{
													"name": "Agent deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to delete (permanent action - cannot be undone)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Agent deleted successfully\"\n}"
												},
												{
													"name": "Agent not found with provided ID",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to delete (permanent action - cannot be undone)"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												}
											]
										},
										{
											"name": "Partially update an agent",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"phoneNumber\": \"0792303245\",\n  \"status\": \"SUSPENDED\",\n  \"userId\": 9627,\n  \"id\": 3023,\n  \"region\": \"str\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Agent ID to partially update"
														}
													]
												},
												"description": "Update only the provided fields of an existing agent. Null fields are ignored. Use PUT for complete updates."
											},
											"response": [
												{
													"name": "Agent partially updated successfully",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"phoneNumber\": \"0792303245\",\n  \"status\": \"SUSPENDED\",\n  \"userId\": 9627,\n  \"id\": 3023,\n  \"region\": \"str\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to partially update"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Agent partially updated successfully\",\n  \"data\": {\n    \"id\": 1,\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@updated.com\",\n    \"phoneNumber\": \"+255987654321\",\n    \"region\": \"Arusha\",\n    \"district\": \"Arusha Urban\",\n    \"ward\": \"Central\",\n    \"userId\": 123\n  }\n}"
												},
												{
													"name": "Bad request - Invalid ID or data validation errors",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"phoneNumber\": \"0792303245\",\n  \"status\": \"SUSPENDED\",\n  \"userId\": 9627,\n  \"id\": 3023,\n  \"region\": \"str\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to partially update"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												},
												{
													"name": "Agent not found with provided ID",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"phoneNumber\": \"0792303245\",\n  \"status\": \"SUSPENDED\",\n  \"userId\": 9627,\n  \"id\": 3023,\n  \"region\": \"str\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to partially update"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												}
											]
										},
										{
											"name": "Get agent with complete user details",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/:id/details",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														":id",
														"details"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) Agent ID to retrieve with complete user details"
														}
													]
												},
												"description": "Retrieve comprehensive information about a specific agent including both agent data and associated user account details. This provides a complete view of the agent's profile."
											},
											"response": [
												{
													"name": "Agent with user details retrieved successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id/details",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id",
																"details"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to retrieve with complete user details"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Agent details retrieved successfully\",\n  \"data\": {\n    \"user\": {\n      \"id\": 123,\n      \"login\": \"john.doe\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"activated\": true,\n      \"langKey\": \"en\",\n      \"authorities\": [\n        \"ROLE_USER\",\n        \"ROLE_AGENT\"\n      ],\n      \"createdBy\": \"system\",\n      \"createdDate\": \"2024-01-15T10:30:00Z\",\n      \"lastModifiedBy\": \"admin\",\n      \"lastModifiedDate\": \"2024-01-20T14:45:00Z\"\n    },\n    \"agent\": {\n      \"id\": 456,\n      \"phoneNumber\": \"+255123456789\",\n      \"status\": \"ACTIVE\",\n      \"region\": \"Dar es Salaam\",\n      \"district\": \"Kinondoni\",\n      \"ward\": \"Mikocheni\",\n      \"userId\": 123\n    }\n  }\n}"
												},
												{
													"name": "Agent not found with provided ID",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/agents/:id/details",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"agents",
																":id",
																"details"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "1",
																	"description": "(Required) Agent ID to retrieve with complete user details"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"message\": \"Agent not found with id: 999\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get all agents with filtering",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/agents?id.greaterThan=175&id.lessThan=175&id.greaterThanOrEqual=175&id.lessThanOrEqual=175&id.equals=175&id.notEquals=175&id.specified=true&id.in=628&id.in=2874&id.notIn=628&id.notIn=2874&phoneNumber.contains=string&phoneNumber.doesNotContain=string&phoneNumber.equals=string&phoneNumber.notEquals=string&phoneNumber.specified=true&phoneNumber.in=string&phoneNumber.in=string&phoneNumber.notIn=string&phoneNumber.notIn=string&status.equals=SUSPENDED&status.notEquals=SUSPENDED&status.specified=true&status.in=SUSPENDED&status.in=SUSPENDED&status.notIn=SUSPENDED&status.notIn=SUSPENDED&userId.greaterThan=175&userId.lessThan=175&userId.greaterThanOrEqual=175&userId.lessThanOrEqual=175&userId.equals=175&userId.notEquals=175&userId.specified=true&userId.in=628&userId.in=2874&userId.notIn=628&userId.notIn=2874&customerId.greaterThan=175&customerId.lessThan=175&customerId.greaterThanOrEqual=175&customerId.lessThanOrEqual=175&customerId.equals=175&customerId.notEquals=175&customerId.specified=true&customerId.in=628&customerId.in=2874&customerId.notIn=628&customerId.notIn=2874&region.contains=string&region.doesNotContain=string&region.equals=string&region.notEquals=string&region.specified=true&region.in=string&region.in=string&region.notIn=string&region.notIn=string&district.contains=string&district.doesNotContain=string&district.equals=string&district.notEquals=string&district.specified=true&district.in=string&district.in=string&district.notIn=string&district.notIn=string&ward.contains=string&ward.doesNotContain=string&ward.equals=string&ward.notEquals=string&ward.specified=true&ward.in=string&ward.in=string&ward.notIn=string&ward.notIn=string&distinct=true&page=0&size=20&sort=string&sort=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"agents"
											],
											"query": [
												{
													"key": "id.greaterThan",
													"value": "175"
												},
												{
													"key": "id.lessThan",
													"value": "175"
												},
												{
													"key": "id.greaterThanOrEqual",
													"value": "175"
												},
												{
													"key": "id.lessThanOrEqual",
													"value": "175"
												},
												{
													"key": "id.equals",
													"value": "175"
												},
												{
													"key": "id.notEquals",
													"value": "175"
												},
												{
													"key": "id.specified",
													"value": "true"
												},
												{
													"key": "id.in",
													"value": "628"
												},
												{
													"key": "id.in",
													"value": "2874"
												},
												{
													"key": "id.notIn",
													"value": "628"
												},
												{
													"key": "id.notIn",
													"value": "2874"
												},
												{
													"key": "phoneNumber.contains",
													"value": "string"
												},
												{
													"key": "phoneNumber.doesNotContain",
													"value": "string"
												},
												{
													"key": "phoneNumber.equals",
													"value": "string"
												},
												{
													"key": "phoneNumber.notEquals",
													"value": "string"
												},
												{
													"key": "phoneNumber.specified",
													"value": "true"
												},
												{
													"key": "phoneNumber.in",
													"value": "string"
												},
												{
													"key": "phoneNumber.in",
													"value": "string"
												},
												{
													"key": "phoneNumber.notIn",
													"value": "string"
												},
												{
													"key": "phoneNumber.notIn",
													"value": "string"
												},
												{
													"key": "status.equals",
													"value": "SUSPENDED"
												},
												{
													"key": "status.notEquals",
													"value": "SUSPENDED"
												},
												{
													"key": "status.specified",
													"value": "true"
												},
												{
													"key": "status.in",
													"value": "SUSPENDED"
												},
												{
													"key": "status.in",
													"value": "SUSPENDED"
												},
												{
													"key": "status.notIn",
													"value": "SUSPENDED"
												},
												{
													"key": "status.notIn",
													"value": "SUSPENDED"
												},
												{
													"key": "userId.greaterThan",
													"value": "175"
												},
												{
													"key": "userId.lessThan",
													"value": "175"
												},
												{
													"key": "userId.greaterThanOrEqual",
													"value": "175"
												},
												{
													"key": "userId.lessThanOrEqual",
													"value": "175"
												},
												{
													"key": "userId.equals",
													"value": "175"
												},
												{
													"key": "userId.notEquals",
													"value": "175"
												},
												{
													"key": "userId.specified",
													"value": "true"
												},
												{
													"key": "userId.in",
													"value": "628"
												},
												{
													"key": "userId.in",
													"value": "2874"
												},
												{
													"key": "userId.notIn",
													"value": "628"
												},
												{
													"key": "userId.notIn",
													"value": "2874"
												},
												{
													"key": "customerId.greaterThan",
													"value": "175"
												},
												{
													"key": "customerId.lessThan",
													"value": "175"
												},
												{
													"key": "customerId.greaterThanOrEqual",
													"value": "175"
												},
												{
													"key": "customerId.lessThanOrEqual",
													"value": "175"
												},
												{
													"key": "customerId.equals",
													"value": "175"
												},
												{
													"key": "customerId.notEquals",
													"value": "175"
												},
												{
													"key": "customerId.specified",
													"value": "true"
												},
												{
													"key": "customerId.in",
													"value": "628"
												},
												{
													"key": "customerId.in",
													"value": "2874"
												},
												{
													"key": "customerId.notIn",
													"value": "628"
												},
												{
													"key": "customerId.notIn",
													"value": "2874"
												},
												{
													"key": "region.contains",
													"value": "string"
												},
												{
													"key": "region.doesNotContain",
													"value": "string"
												},
												{
													"key": "region.equals",
													"value": "string"
												},
												{
													"key": "region.notEquals",
													"value": "string"
												},
												{
													"key": "region.specified",
													"value": "true"
												},
												{
													"key": "region.in",
													"value": "string"
												},
												{
													"key": "region.in",
													"value": "string"
												},
												{
													"key": "region.notIn",
													"value": "string"
												},
												{
													"key": "region.notIn",
													"value": "string"
												},
												{
													"key": "district.contains",
													"value": "string"
												},
												{
													"key": "district.doesNotContain",
													"value": "string"
												},
												{
													"key": "district.equals",
													"value": "string"
												},
												{
													"key": "district.notEquals",
													"value": "string"
												},
												{
													"key": "district.specified",
													"value": "true"
												},
												{
													"key": "district.in",
													"value": "string"
												},
												{
													"key": "district.in",
													"value": "string"
												},
												{
													"key": "district.notIn",
													"value": "string"
												},
												{
													"key": "district.notIn",
													"value": "string"
												},
												{
													"key": "ward.contains",
													"value": "string"
												},
												{
													"key": "ward.doesNotContain",
													"value": "string"
												},
												{
													"key": "ward.equals",
													"value": "string"
												},
												{
													"key": "ward.notEquals",
													"value": "string"
												},
												{
													"key": "ward.specified",
													"value": "true"
												},
												{
													"key": "ward.in",
													"value": "string"
												},
												{
													"key": "ward.in",
													"value": "string"
												},
												{
													"key": "ward.notIn",
													"value": "string"
												},
												{
													"key": "ward.notIn",
													"value": "string"
												},
												{
													"key": "distinct",
													"value": "true"
												},
												{
													"key": "page",
													"value": "0",
													"description": "Zero-based page index (0..N)"
												},
												{
													"key": "size",
													"value": "20",
													"description": "The size of the page to be returned"
												},
												{
													"key": "sort",
													"value": "string",
													"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
												},
												{
													"key": "sort",
													"value": "string",
													"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
												}
											]
										},
										"description": "Retrieve all agents with optional filtering and pagination. Supports complex filtering by various agent attributes including location data."
									},
									"response": [
										{
											"name": "Agents retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents?id.greaterThan=175&id.lessThan=175&id.greaterThanOrEqual=175&id.lessThanOrEqual=175&id.equals=175&id.notEquals=175&id.specified=true&id.in=6949&id.in=2766&id.notIn=6949&id.notIn=2766&phoneNumber.contains=string&phoneNumber.doesNotContain=string&phoneNumber.equals=string&phoneNumber.notEquals=string&phoneNumber.specified=true&phoneNumber.in=string&phoneNumber.in=string&phoneNumber.notIn=string&phoneNumber.notIn=string&status.equals=SUSPENDED&status.notEquals=SUSPENDED&status.specified=true&status.in=ACTIVE&status.in=ACTIVE&status.notIn=ACTIVE&status.notIn=ACTIVE&userId.greaterThan=175&userId.lessThan=175&userId.greaterThanOrEqual=175&userId.lessThanOrEqual=175&userId.equals=175&userId.notEquals=175&userId.specified=true&userId.in=6949&userId.in=2766&userId.notIn=6949&userId.notIn=2766&customerId.greaterThan=175&customerId.lessThan=175&customerId.greaterThanOrEqual=175&customerId.lessThanOrEqual=175&customerId.equals=175&customerId.notEquals=175&customerId.specified=true&customerId.in=6949&customerId.in=2766&customerId.notIn=6949&customerId.notIn=2766&region.contains=string&region.doesNotContain=string&region.equals=string&region.notEquals=string&region.specified=true&region.in=string&region.in=string&region.notIn=string&region.notIn=string&district.contains=string&district.doesNotContain=string&district.equals=string&district.notEquals=string&district.specified=true&district.in=string&district.in=string&district.notIn=string&district.notIn=string&ward.contains=string&ward.doesNotContain=string&ward.equals=string&ward.notEquals=string&ward.specified=true&ward.in=string&ward.in=string&ward.notIn=string&ward.notIn=string&distinct=true&page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents"
													],
													"query": [
														{
															"key": "id.greaterThan",
															"value": "175"
														},
														{
															"key": "id.lessThan",
															"value": "175"
														},
														{
															"key": "id.greaterThanOrEqual",
															"value": "175"
														},
														{
															"key": "id.lessThanOrEqual",
															"value": "175"
														},
														{
															"key": "id.equals",
															"value": "175"
														},
														{
															"key": "id.notEquals",
															"value": "175"
														},
														{
															"key": "id.specified",
															"value": "true"
														},
														{
															"key": "id.in",
															"value": "6949"
														},
														{
															"key": "id.in",
															"value": "2766"
														},
														{
															"key": "id.notIn",
															"value": "6949"
														},
														{
															"key": "id.notIn",
															"value": "2766"
														},
														{
															"key": "phoneNumber.contains",
															"value": "string"
														},
														{
															"key": "phoneNumber.doesNotContain",
															"value": "string"
														},
														{
															"key": "phoneNumber.equals",
															"value": "string"
														},
														{
															"key": "phoneNumber.notEquals",
															"value": "string"
														},
														{
															"key": "phoneNumber.specified",
															"value": "true"
														},
														{
															"key": "phoneNumber.in",
															"value": "string"
														},
														{
															"key": "phoneNumber.in",
															"value": "string"
														},
														{
															"key": "phoneNumber.notIn",
															"value": "string"
														},
														{
															"key": "phoneNumber.notIn",
															"value": "string"
														},
														{
															"key": "status.equals",
															"value": "SUSPENDED"
														},
														{
															"key": "status.notEquals",
															"value": "SUSPENDED"
														},
														{
															"key": "status.specified",
															"value": "true"
														},
														{
															"key": "status.in",
															"value": "ACTIVE"
														},
														{
															"key": "status.in",
															"value": "ACTIVE"
														},
														{
															"key": "status.notIn",
															"value": "ACTIVE"
														},
														{
															"key": "status.notIn",
															"value": "ACTIVE"
														},
														{
															"key": "userId.greaterThan",
															"value": "175"
														},
														{
															"key": "userId.lessThan",
															"value": "175"
														},
														{
															"key": "userId.greaterThanOrEqual",
															"value": "175"
														},
														{
															"key": "userId.lessThanOrEqual",
															"value": "175"
														},
														{
															"key": "userId.equals",
															"value": "175"
														},
														{
															"key": "userId.notEquals",
															"value": "175"
														},
														{
															"key": "userId.specified",
															"value": "true"
														},
														{
															"key": "userId.in",
															"value": "6949"
														},
														{
															"key": "userId.in",
															"value": "2766"
														},
														{
															"key": "userId.notIn",
															"value": "6949"
														},
														{
															"key": "userId.notIn",
															"value": "2766"
														},
														{
															"key": "customerId.greaterThan",
															"value": "175"
														},
														{
															"key": "customerId.lessThan",
															"value": "175"
														},
														{
															"key": "customerId.greaterThanOrEqual",
															"value": "175"
														},
														{
															"key": "customerId.lessThanOrEqual",
															"value": "175"
														},
														{
															"key": "customerId.equals",
															"value": "175"
														},
														{
															"key": "customerId.notEquals",
															"value": "175"
														},
														{
															"key": "customerId.specified",
															"value": "true"
														},
														{
															"key": "customerId.in",
															"value": "6949"
														},
														{
															"key": "customerId.in",
															"value": "2766"
														},
														{
															"key": "customerId.notIn",
															"value": "6949"
														},
														{
															"key": "customerId.notIn",
															"value": "2766"
														},
														{
															"key": "region.contains",
															"value": "string"
														},
														{
															"key": "region.doesNotContain",
															"value": "string"
														},
														{
															"key": "region.equals",
															"value": "string"
														},
														{
															"key": "region.notEquals",
															"value": "string"
														},
														{
															"key": "region.specified",
															"value": "true"
														},
														{
															"key": "region.in",
															"value": "string"
														},
														{
															"key": "region.in",
															"value": "string"
														},
														{
															"key": "region.notIn",
															"value": "string"
														},
														{
															"key": "region.notIn",
															"value": "string"
														},
														{
															"key": "district.contains",
															"value": "string"
														},
														{
															"key": "district.doesNotContain",
															"value": "string"
														},
														{
															"key": "district.equals",
															"value": "string"
														},
														{
															"key": "district.notEquals",
															"value": "string"
														},
														{
															"key": "district.specified",
															"value": "true"
														},
														{
															"key": "district.in",
															"value": "string"
														},
														{
															"key": "district.in",
															"value": "string"
														},
														{
															"key": "district.notIn",
															"value": "string"
														},
														{
															"key": "district.notIn",
															"value": "string"
														},
														{
															"key": "ward.contains",
															"value": "string"
														},
														{
															"key": "ward.doesNotContain",
															"value": "string"
														},
														{
															"key": "ward.equals",
															"value": "string"
														},
														{
															"key": "ward.notEquals",
															"value": "string"
														},
														{
															"key": "ward.specified",
															"value": "true"
														},
														{
															"key": "ward.in",
															"value": "string"
														},
														{
															"key": "ward.in",
															"value": "string"
														},
														{
															"key": "ward.notIn",
															"value": "string"
														},
														{
															"key": "ward.notIn",
															"value": "string"
														},
														{
															"key": "distinct",
															"value": "true"
														},
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "string"
														},
														{
															"key": "sort",
															"value": "string"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Agents retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"phoneNumber\": \"+255123456789\",\n      \"region\": \"Dar es Salaam\",\n      \"district\": \"Kinondoni\",\n      \"ward\": \"Mikocheni\",\n      \"userId\": 123\n    },\n    {\n      \"id\": 2,\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"email\": \"jane.smith@example.com\",\n      \"phoneNumber\": \"+255987654321\",\n      \"region\": \"Arusha\",\n      \"district\": \"Arusha Urban\",\n      \"ward\": \"Central\",\n      \"userId\": 124\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a new agent",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"0792303245\",\n  \"status\": \"SUSPENDED\",\n  \"userId\": 9627,\n  \"id\": 3023,\n  \"region\": \"str\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/agents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"agents"
											]
										},
										"description": "Register a new agent in the system with personal details, location assignment, and user account association. Agents are responsible for customer registration in their assigned areas."
									},
									"response": [
										{
											"name": "Agent created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"phoneNumber\": \"0792303245\",\n  \"status\": \"SUSPENDED\",\n  \"userId\": 9627,\n  \"id\": 3023,\n  \"region\": \"str\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"CREATED\",\n  \"message\": \"Agent created successfully\",\n  \"data\": {\n    \"id\": 1,\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phoneNumber\": \"+255123456789\",\n    \"region\": \"Dar es Salaam\",\n    \"district\": \"Kinondoni\",\n    \"ward\": \"Mikocheni\",\n    \"userId\": 123\n  }\n}"
										},
										{
											"name": "Bad request - Invalid data or agent already has ID",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"phoneNumber\": \"0792303245\",\n  \"status\": \"SUSPENDED\",\n  \"userId\": 9627,\n  \"id\": 3023,\n  \"region\": \"str\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"Bad Request\",\n  \"message\": \"A new agent cannot already have an ID\"\n}"
										}
									]
								},
								{
									"name": "Register agent with user account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"login\": \"0729743921\",\n  \"phoneNumber\": \"0713230784\",\n  \"status\": \"SUSPENDED\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"email\": \"string\",\n  \"langKey\": \"stri\",\n  \"region\": \"string\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/agents/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"agents",
												"register"
											]
										},
										"description": "Create both User (for authentication) and Agent (for business logic) entities in a single atomic transaction. This is the recommended way to register new agents as it ensures data consistency."
									},
									"response": [
										{
											"name": "Agent and user account created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"login\": \"0729743921\",\n  \"phoneNumber\": \"0713230784\",\n  \"status\": \"SUSPENDED\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"email\": \"string\",\n  \"langKey\": \"stri\",\n  \"region\": \"string\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														"register"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"CREATED\",\n  \"message\": \"Agent registered successfully\",\n  \"data\": {\n    \"user\": {\n      \"id\": 123,\n      \"login\": \"john.doe\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"activated\": true,\n      \"langKey\": \"en\",\n      \"authorities\": [\n        \"ROLE_USER\"\n      ]\n    },\n    \"agent\": {\n      \"id\": 456,\n      \"phoneNumber\": \"+255123456789\",\n      \"status\": \"ACTIVE\",\n      \"region\": \"Dar es Salaam\",\n      \"district\": \"Kinondoni\",\n      \"ward\": \"Mikocheni\",\n      \"userId\": 123\n    }\n  }\n}"
										},
										{
											"name": "Bad request - Invalid data, validation errors, or user already exists",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"login\": \"0729743921\",\n  \"phoneNumber\": \"0713230784\",\n  \"status\": \"SUSPENDED\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"email\": \"string\",\n  \"langKey\": \"stri\",\n  \"region\": \"string\",\n  \"district\": \"string\",\n  \"ward\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														"register"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"Bad Request\",\n  \"message\": \"Login name already used!\"\n}"
										}
									]
								},
								{
									"name": "Reindex all agents to Elasticsearch",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/agents/_reindex",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"agents",
												"_reindex"
											]
										},
										"description": "Rebuild the Elasticsearch index for all agents from the database. Use this when search functionality is not working correctly or after data migrations. This operation may take some time for large datasets."
									},
									"response": [
										{
											"name": "Agent reindexing completed successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/_reindex",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														"_reindex"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Agent reindexing completed successfully\",\n  \"data\": \"Successfully reindexed 150 agents to Elasticsearch\"\n}"
										},
										{
											"name": "Elasticsearch reindexing failed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/_reindex",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														"_reindex"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"Internal Server Error\",\n  \"message\": \"Failed to reindex agents: Elasticsearch cluster unavailable\"\n}"
										}
									]
								},
								{
									"name": "Count agents with filtering",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/agents/count?id.greaterThan=175&id.lessThan=175&id.greaterThanOrEqual=175&id.lessThanOrEqual=175&id.equals=175&id.notEquals=175&id.specified=true&id.in=628&id.in=2874&id.notIn=628&id.notIn=2874&phoneNumber.contains=string&phoneNumber.doesNotContain=string&phoneNumber.equals=string&phoneNumber.notEquals=string&phoneNumber.specified=true&phoneNumber.in=string&phoneNumber.in=string&phoneNumber.notIn=string&phoneNumber.notIn=string&status.equals=SUSPENDED&status.notEquals=SUSPENDED&status.specified=true&status.in=SUSPENDED&status.in=SUSPENDED&status.notIn=SUSPENDED&status.notIn=SUSPENDED&userId.greaterThan=175&userId.lessThan=175&userId.greaterThanOrEqual=175&userId.lessThanOrEqual=175&userId.equals=175&userId.notEquals=175&userId.specified=true&userId.in=628&userId.in=2874&userId.notIn=628&userId.notIn=2874&customerId.greaterThan=175&customerId.lessThan=175&customerId.greaterThanOrEqual=175&customerId.lessThanOrEqual=175&customerId.equals=175&customerId.notEquals=175&customerId.specified=true&customerId.in=628&customerId.in=2874&customerId.notIn=628&customerId.notIn=2874&region.contains=string&region.doesNotContain=string&region.equals=string&region.notEquals=string&region.specified=true&region.in=string&region.in=string&region.notIn=string&region.notIn=string&district.contains=string&district.doesNotContain=string&district.equals=string&district.notEquals=string&district.specified=true&district.in=string&district.in=string&district.notIn=string&district.notIn=string&ward.contains=string&ward.doesNotContain=string&ward.equals=string&ward.notEquals=string&ward.specified=true&ward.in=string&ward.in=string&ward.notIn=string&ward.notIn=string&distinct=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"agents",
												"count"
											],
											"query": [
												{
													"key": "id.greaterThan",
													"value": "175"
												},
												{
													"key": "id.lessThan",
													"value": "175"
												},
												{
													"key": "id.greaterThanOrEqual",
													"value": "175"
												},
												{
													"key": "id.lessThanOrEqual",
													"value": "175"
												},
												{
													"key": "id.equals",
													"value": "175"
												},
												{
													"key": "id.notEquals",
													"value": "175"
												},
												{
													"key": "id.specified",
													"value": "true"
												},
												{
													"key": "id.in",
													"value": "628"
												},
												{
													"key": "id.in",
													"value": "2874"
												},
												{
													"key": "id.notIn",
													"value": "628"
												},
												{
													"key": "id.notIn",
													"value": "2874"
												},
												{
													"key": "phoneNumber.contains",
													"value": "string"
												},
												{
													"key": "phoneNumber.doesNotContain",
													"value": "string"
												},
												{
													"key": "phoneNumber.equals",
													"value": "string"
												},
												{
													"key": "phoneNumber.notEquals",
													"value": "string"
												},
												{
													"key": "phoneNumber.specified",
													"value": "true"
												},
												{
													"key": "phoneNumber.in",
													"value": "string"
												},
												{
													"key": "phoneNumber.in",
													"value": "string"
												},
												{
													"key": "phoneNumber.notIn",
													"value": "string"
												},
												{
													"key": "phoneNumber.notIn",
													"value": "string"
												},
												{
													"key": "status.equals",
													"value": "SUSPENDED"
												},
												{
													"key": "status.notEquals",
													"value": "SUSPENDED"
												},
												{
													"key": "status.specified",
													"value": "true"
												},
												{
													"key": "status.in",
													"value": "SUSPENDED"
												},
												{
													"key": "status.in",
													"value": "SUSPENDED"
												},
												{
													"key": "status.notIn",
													"value": "SUSPENDED"
												},
												{
													"key": "status.notIn",
													"value": "SUSPENDED"
												},
												{
													"key": "userId.greaterThan",
													"value": "175"
												},
												{
													"key": "userId.lessThan",
													"value": "175"
												},
												{
													"key": "userId.greaterThanOrEqual",
													"value": "175"
												},
												{
													"key": "userId.lessThanOrEqual",
													"value": "175"
												},
												{
													"key": "userId.equals",
													"value": "175"
												},
												{
													"key": "userId.notEquals",
													"value": "175"
												},
												{
													"key": "userId.specified",
													"value": "true"
												},
												{
													"key": "userId.in",
													"value": "628"
												},
												{
													"key": "userId.in",
													"value": "2874"
												},
												{
													"key": "userId.notIn",
													"value": "628"
												},
												{
													"key": "userId.notIn",
													"value": "2874"
												},
												{
													"key": "customerId.greaterThan",
													"value": "175"
												},
												{
													"key": "customerId.lessThan",
													"value": "175"
												},
												{
													"key": "customerId.greaterThanOrEqual",
													"value": "175"
												},
												{
													"key": "customerId.lessThanOrEqual",
													"value": "175"
												},
												{
													"key": "customerId.equals",
													"value": "175"
												},
												{
													"key": "customerId.notEquals",
													"value": "175"
												},
												{
													"key": "customerId.specified",
													"value": "true"
												},
												{
													"key": "customerId.in",
													"value": "628"
												},
												{
													"key": "customerId.in",
													"value": "2874"
												},
												{
													"key": "customerId.notIn",
													"value": "628"
												},
												{
													"key": "customerId.notIn",
													"value": "2874"
												},
												{
													"key": "region.contains",
													"value": "string"
												},
												{
													"key": "region.doesNotContain",
													"value": "string"
												},
												{
													"key": "region.equals",
													"value": "string"
												},
												{
													"key": "region.notEquals",
													"value": "string"
												},
												{
													"key": "region.specified",
													"value": "true"
												},
												{
													"key": "region.in",
													"value": "string"
												},
												{
													"key": "region.in",
													"value": "string"
												},
												{
													"key": "region.notIn",
													"value": "string"
												},
												{
													"key": "region.notIn",
													"value": "string"
												},
												{
													"key": "district.contains",
													"value": "string"
												},
												{
													"key": "district.doesNotContain",
													"value": "string"
												},
												{
													"key": "district.equals",
													"value": "string"
												},
												{
													"key": "district.notEquals",
													"value": "string"
												},
												{
													"key": "district.specified",
													"value": "true"
												},
												{
													"key": "district.in",
													"value": "string"
												},
												{
													"key": "district.in",
													"value": "string"
												},
												{
													"key": "district.notIn",
													"value": "string"
												},
												{
													"key": "district.notIn",
													"value": "string"
												},
												{
													"key": "ward.contains",
													"value": "string"
												},
												{
													"key": "ward.doesNotContain",
													"value": "string"
												},
												{
													"key": "ward.equals",
													"value": "string"
												},
												{
													"key": "ward.notEquals",
													"value": "string"
												},
												{
													"key": "ward.specified",
													"value": "true"
												},
												{
													"key": "ward.in",
													"value": "string"
												},
												{
													"key": "ward.in",
													"value": "string"
												},
												{
													"key": "ward.notIn",
													"value": "string"
												},
												{
													"key": "ward.notIn",
													"value": "string"
												},
												{
													"key": "distinct",
													"value": "true"
												}
											]
										},
										"description": "Get the total count of agents matching the specified criteria. Useful for pagination calculations."
									},
									"response": [
										{
											"name": "Agent count retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/count?id.greaterThan=175&id.lessThan=175&id.greaterThanOrEqual=175&id.lessThanOrEqual=175&id.equals=175&id.notEquals=175&id.specified=true&id.in=6949&id.in=2766&id.notIn=6949&id.notIn=2766&phoneNumber.contains=string&phoneNumber.doesNotContain=string&phoneNumber.equals=string&phoneNumber.notEquals=string&phoneNumber.specified=true&phoneNumber.in=string&phoneNumber.in=string&phoneNumber.notIn=string&phoneNumber.notIn=string&status.equals=SUSPENDED&status.notEquals=SUSPENDED&status.specified=true&status.in=ACTIVE&status.in=ACTIVE&status.notIn=ACTIVE&status.notIn=ACTIVE&userId.greaterThan=175&userId.lessThan=175&userId.greaterThanOrEqual=175&userId.lessThanOrEqual=175&userId.equals=175&userId.notEquals=175&userId.specified=true&userId.in=6949&userId.in=2766&userId.notIn=6949&userId.notIn=2766&customerId.greaterThan=175&customerId.lessThan=175&customerId.greaterThanOrEqual=175&customerId.lessThanOrEqual=175&customerId.equals=175&customerId.notEquals=175&customerId.specified=true&customerId.in=6949&customerId.in=2766&customerId.notIn=6949&customerId.notIn=2766&region.contains=string&region.doesNotContain=string&region.equals=string&region.notEquals=string&region.specified=true&region.in=string&region.in=string&region.notIn=string&region.notIn=string&district.contains=string&district.doesNotContain=string&district.equals=string&district.notEquals=string&district.specified=true&district.in=string&district.in=string&district.notIn=string&district.notIn=string&ward.contains=string&ward.doesNotContain=string&ward.equals=string&ward.notEquals=string&ward.specified=true&ward.in=string&ward.in=string&ward.notIn=string&ward.notIn=string&distinct=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														"count"
													],
													"query": [
														{
															"key": "id.greaterThan",
															"value": "175"
														},
														{
															"key": "id.lessThan",
															"value": "175"
														},
														{
															"key": "id.greaterThanOrEqual",
															"value": "175"
														},
														{
															"key": "id.lessThanOrEqual",
															"value": "175"
														},
														{
															"key": "id.equals",
															"value": "175"
														},
														{
															"key": "id.notEquals",
															"value": "175"
														},
														{
															"key": "id.specified",
															"value": "true"
														},
														{
															"key": "id.in",
															"value": "6949"
														},
														{
															"key": "id.in",
															"value": "2766"
														},
														{
															"key": "id.notIn",
															"value": "6949"
														},
														{
															"key": "id.notIn",
															"value": "2766"
														},
														{
															"key": "phoneNumber.contains",
															"value": "string"
														},
														{
															"key": "phoneNumber.doesNotContain",
															"value": "string"
														},
														{
															"key": "phoneNumber.equals",
															"value": "string"
														},
														{
															"key": "phoneNumber.notEquals",
															"value": "string"
														},
														{
															"key": "phoneNumber.specified",
															"value": "true"
														},
														{
															"key": "phoneNumber.in",
															"value": "string"
														},
														{
															"key": "phoneNumber.in",
															"value": "string"
														},
														{
															"key": "phoneNumber.notIn",
															"value": "string"
														},
														{
															"key": "phoneNumber.notIn",
															"value": "string"
														},
														{
															"key": "status.equals",
															"value": "SUSPENDED"
														},
														{
															"key": "status.notEquals",
															"value": "SUSPENDED"
														},
														{
															"key": "status.specified",
															"value": "true"
														},
														{
															"key": "status.in",
															"value": "ACTIVE"
														},
														{
															"key": "status.in",
															"value": "ACTIVE"
														},
														{
															"key": "status.notIn",
															"value": "ACTIVE"
														},
														{
															"key": "status.notIn",
															"value": "ACTIVE"
														},
														{
															"key": "userId.greaterThan",
															"value": "175"
														},
														{
															"key": "userId.lessThan",
															"value": "175"
														},
														{
															"key": "userId.greaterThanOrEqual",
															"value": "175"
														},
														{
															"key": "userId.lessThanOrEqual",
															"value": "175"
														},
														{
															"key": "userId.equals",
															"value": "175"
														},
														{
															"key": "userId.notEquals",
															"value": "175"
														},
														{
															"key": "userId.specified",
															"value": "true"
														},
														{
															"key": "userId.in",
															"value": "6949"
														},
														{
															"key": "userId.in",
															"value": "2766"
														},
														{
															"key": "userId.notIn",
															"value": "6949"
														},
														{
															"key": "userId.notIn",
															"value": "2766"
														},
														{
															"key": "customerId.greaterThan",
															"value": "175"
														},
														{
															"key": "customerId.lessThan",
															"value": "175"
														},
														{
															"key": "customerId.greaterThanOrEqual",
															"value": "175"
														},
														{
															"key": "customerId.lessThanOrEqual",
															"value": "175"
														},
														{
															"key": "customerId.equals",
															"value": "175"
														},
														{
															"key": "customerId.notEquals",
															"value": "175"
														},
														{
															"key": "customerId.specified",
															"value": "true"
														},
														{
															"key": "customerId.in",
															"value": "6949"
														},
														{
															"key": "customerId.in",
															"value": "2766"
														},
														{
															"key": "customerId.notIn",
															"value": "6949"
														},
														{
															"key": "customerId.notIn",
															"value": "2766"
														},
														{
															"key": "region.contains",
															"value": "string"
														},
														{
															"key": "region.doesNotContain",
															"value": "string"
														},
														{
															"key": "region.equals",
															"value": "string"
														},
														{
															"key": "region.notEquals",
															"value": "string"
														},
														{
															"key": "region.specified",
															"value": "true"
														},
														{
															"key": "region.in",
															"value": "string"
														},
														{
															"key": "region.in",
															"value": "string"
														},
														{
															"key": "region.notIn",
															"value": "string"
														},
														{
															"key": "region.notIn",
															"value": "string"
														},
														{
															"key": "district.contains",
															"value": "string"
														},
														{
															"key": "district.doesNotContain",
															"value": "string"
														},
														{
															"key": "district.equals",
															"value": "string"
														},
														{
															"key": "district.notEquals",
															"value": "string"
														},
														{
															"key": "district.specified",
															"value": "true"
														},
														{
															"key": "district.in",
															"value": "string"
														},
														{
															"key": "district.in",
															"value": "string"
														},
														{
															"key": "district.notIn",
															"value": "string"
														},
														{
															"key": "district.notIn",
															"value": "string"
														},
														{
															"key": "ward.contains",
															"value": "string"
														},
														{
															"key": "ward.doesNotContain",
															"value": "string"
														},
														{
															"key": "ward.equals",
															"value": "string"
														},
														{
															"key": "ward.notEquals",
															"value": "string"
														},
														{
															"key": "ward.specified",
															"value": "true"
														},
														{
															"key": "ward.in",
															"value": "string"
														},
														{
															"key": "ward.in",
															"value": "string"
														},
														{
															"key": "ward.notIn",
															"value": "string"
														},
														{
															"key": "ward.notIn",
															"value": "string"
														},
														{
															"key": "distinct",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Agent count retrieved successfully\",\n  \"data\": 25\n}"
										}
									]
								},
								{
									"name": "Search agents using Elasticsearch",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/agents/_search?query=john kinondoni&page=0&size=20&sort=string&sort=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"agents",
												"_search"
											],
											"query": [
												{
													"key": "query",
													"value": "john kinondoni",
													"description": "(Required) Search query string. Searches across agent names, email, phone, and location fields."
												},
												{
													"key": "page",
													"value": "0",
													"description": "Zero-based page index (0..N)"
												},
												{
													"key": "size",
													"value": "20",
													"description": "The size of the page to be returned"
												},
												{
													"key": "sort",
													"value": "string",
													"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
												},
												{
													"key": "sort",
													"value": "string",
													"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
												}
											]
										},
										"description": "Full-text search across agent data using Elasticsearch. Searches firstName, lastName, email, phoneNumber, and location fields."
									},
									"response": [
										{
											"name": "Agent search completed successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/_search?query=john kinondoni&page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														"_search"
													],
													"query": [
														{
															"key": "query",
															"value": "john kinondoni"
														},
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "string"
														},
														{
															"key": "sort",
															"value": "string"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Agent search completed successfully\",\n  \"data\": [\n    {\n      \"id\": 1,\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"phoneNumber\": \"+255123456789\",\n      \"region\": \"Dar es Salaam\",\n      \"district\": \"Kinondoni\",\n      \"ward\": \"Mikocheni\",\n      \"userId\": 123\n    }\n  ]\n}"
										},
										{
											"name": "Elasticsearch service error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/_search?query=john kinondoni&page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														"_search"
													],
													"query": [
														{
															"key": "query",
															"value": "john kinondoni"
														},
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "string"
														},
														{
															"key": "sort",
															"value": "string"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"Internal Server Error\",\n  \"message\": \"Search service temporarily unavailable\"\n}"
										}
									]
								},
								{
									"name": "Get agent search autocomplete suggestions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/agents/_autocomplete?query=joh&limit=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"agents",
												"_autocomplete"
											],
											"query": [
												{
													"key": "query",
													"value": "joh",
													"description": "(Required) Partial search query for autocomplete suggestions"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Maximum number of suggestions to return"
												}
											]
										},
										"description": "Get autocomplete suggestions for agent search based on partial input. Useful for implementing search-as-you-type functionality."
									},
									"response": [
										{
											"name": "Autocomplete suggestions retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/_autocomplete?query=joh&limit=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														"_autocomplete"
													],
													"query": [
														{
															"key": "query",
															"value": "joh"
														},
														{
															"key": "limit",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Autocomplete suggestions retrieved successfully\",\n  \"data\": [\n    \"John Doe\",\n    \"John Smith\",\n    \"Johnson Williams\",\n    \"johnny@example.com\",\n    \"Dar es Salaam\"\n  ]\n}"
										},
										{
											"name": "Elasticsearch service error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/agents/_autocomplete?query=joh&limit=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"agents",
														"_autocomplete"
													],
													"query": [
														{
															"key": "query",
															"value": "joh"
														},
														{
															"key": "limit",
															"value": "10"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								}
							]
						},
						{
							"name": "admin/users",
							"item": [
								{
									"name": "{login}",
									"item": [
										{
											"name": "Get user by login",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/:login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														":login"
													],
													"variable": [
														{
															"key": "login",
															"value": "admin",
															"description": "(Required) User login username"
														}
													]
												},
												"description": "Retrieve a specific user by their login username. Requires ADMIN authority."
											},
											"response": [
												{
													"name": "User found and returned successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/admin/users/:login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"admin",
																"users",
																":login"
															],
															"variable": [
																{
																	"key": "login",
																	"value": "admin",
																	"description": "(Required) User login username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {},\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"1962-12-25T07:02:50.554Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1958-09-23T04:17:55.669Z\",\n  \"path\": \"string\"\n}"
												},
												{
													"name": "User not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/admin/users/:login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"admin",
																"users",
																":login"
															],
															"variable": [
																{
																	"key": "login",
																	"value": "admin",
																	"description": "(Required) User login username"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												}
											]
										},
										{
											"name": "Update an existing user",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/:login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														":login"
													],
													"variable": [
														{
															"key": "login",
															"value": "",
															"description": "(Required) User login (optional)"
														}
													]
												},
												"description": "Update user details, roles, and permissions. Requires ADMIN authority."
											},
											"response": [
												{
													"name": "User updated successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/admin/users/:login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"admin",
																"users",
																":login"
															],
															"variable": [
																{
																	"key": "login",
																	"value": "",
																	"description": "(Required) User login (optional)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {},\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"1962-12-25T07:02:50.554Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1958-09-23T04:17:55.669Z\",\n  \"path\": \"string\"\n}"
												},
												{
													"name": "Bad request - Login or email conflict",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/admin/users/:login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"admin",
																"users",
																":login"
															],
															"variable": [
																{
																	"key": "login",
																	"value": "",
																	"description": "(Required) User login (optional)"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												},
												{
													"name": "User not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/admin/users/:login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"admin",
																"users",
																":login"
															],
															"variable": [
																{
																	"key": "login",
																	"value": "",
																	"description": "(Required) User login (optional)"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												}
											]
										},
										{
											"name": "Delete a user",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/:login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														":login"
													],
													"variable": [
														{
															"key": "login",
															"value": "username",
															"description": "(Required) User login to delete"
														}
													]
												},
												"description": "Permanently delete a user from the system. This action cannot be undone. Requires ADMIN authority."
											},
											"response": [
												{
													"name": "User deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/admin/users/:login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"admin",
																"users",
																":login"
															],
															"variable": [
																{
																	"key": "login",
																	"value": "username",
																	"description": "(Required) User login to delete"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {},\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"1962-12-25T07:02:50.554Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1958-09-23T04:17:55.669Z\",\n  \"path\": \"string\"\n}"
												},
												{
													"name": "User not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/admin/users/:login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"admin",
																"users",
																":login"
															],
															"variable": [
																{
																	"key": "login",
																	"value": "username",
																	"description": "(Required) User login to delete"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												}
											]
										}
									]
								},
								{
									"name": "Get all users",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users?page=0&size=20&sort=string&sort=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "0",
													"description": "Zero-based page index (0..N)"
												},
												{
													"key": "size",
													"value": "20",
													"description": "The size of the page to be returned"
												},
												{
													"key": "sort",
													"value": "string",
													"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
												},
												{
													"key": "sort",
													"value": "string",
													"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
												}
											]
										},
										"description": "Retrieve all system users with pagination. Only accessible to administrators."
									},
									"response": [
										{
											"name": "Users retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users?page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "string"
														},
														{
															"key": "sort",
															"value": "string"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {},\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"1962-12-25T07:02:50.554Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1958-09-23T04:17:55.669Z\",\n  \"path\": \"string\"\n}"
										},
										{
											"name": "Access denied - ADMIN authority required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users?page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "string"
														},
														{
															"key": "sort",
															"value": "string"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								},
								{
									"name": "Update an existing user",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "null",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users"
											]
										},
										"description": "Update user details, roles, and permissions. Requires ADMIN authority."
									},
									"response": [
										{
											"name": "User updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {},\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"1962-12-25T07:02:50.554Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1958-09-23T04:17:55.669Z\",\n  \"path\": \"string\"\n}"
										},
										{
											"name": "Bad request - Login or email conflict",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								},
								{
									"name": "Create a new user",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "null",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users"
											]
										},
										"description": "Create a new system user with roles and permissions. Sends activation email. Requires ADMIN authority."
									},
									"response": [
										{
											"name": "User created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {},\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"1962-12-25T07:02:50.554Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1958-09-23T04:17:55.669Z\",\n  \"path\": \"string\"\n}"
										},
										{
											"name": "Bad request - Login or email already exists",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "Access denied - ADMIN authority required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								}
							]
						},
						{
							"name": "account",
							"item": [
								{
									"name": "reset-password",
									"item": [
										{
											"name": "Request password reset",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/account/reset-password/init",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"reset-password",
														"init"
													]
												},
												"description": "Send password reset email to user. Always returns success for security reasons."
											},
											"response": [
												{
													"name": "Password reset request processed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/account/reset-password/init",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"account",
																"reset-password",
																"init"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Password reset request processed\"\n}"
												},
												{
													"name": "Bad request - Invalid email format",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/account/reset-password/init",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"account",
																"reset-password",
																"init"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"Bad Request\",\n  \"message\": \"Email must be valid\"\n}"
												}
											]
										},
										{
											"name": "Complete password reset",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"key\": \"string\",\n  \"newPassword\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/account/reset-password/finish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"reset-password",
														"finish"
													]
												},
												"description": "Complete password reset using the key from reset email and new password."
											},
											"response": [
												{
													"name": "Password reset completed successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"key\": \"string\",\n  \"newPassword\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/account/reset-password/finish",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"account",
																"reset-password",
																"finish"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												},
												{
													"name": "Bad request - Invalid password or reset key",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"key\": \"string\",\n  \"newPassword\": \"string\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/account/reset-password/finish",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"account",
																"reset-password",
																"finish"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"\""
												}
											]
										}
									]
								},
								{
									"name": "Get current user account",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"account"
											]
										},
										"description": "Retrieve the current authenticated user's account information."
									},
									"response": [
										{
											"name": "Account information retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"account"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {},\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"1962-12-25T07:02:50.554Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1958-09-23T04:17:55.669Z\",\n  \"path\": \"string\"\n}"
										},
										{
											"name": "Unauthorized - Authentication required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"account"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								},
								{
									"name": "Update current user account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "null",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"account"
											]
										},
										"description": "Update the current authenticated user's profile information."
									},
									"response": [
										{
											"name": "Account updated successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"account"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "Bad request - Email already in use",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"account"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								},
								{
									"name": "Change user password",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currentPassword\": \"string\",\n  \"newPassword\": \"string\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/account/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"account",
												"change-password"
											]
										},
										"description": "Change the current authenticated user's password. Requires current password for verification."
									},
									"response": [
										{
											"name": "Password changed successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currentPassword\": \"string\",\n  \"newPassword\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/account/change-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"change-password"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "Bad request - Invalid password",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currentPassword\": \"string\",\n  \"newPassword\": \"string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/account/change-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"account",
														"change-password"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								}
							]
						},
						{
							"name": "activity-logs",
							"item": [
								{
									"name": "me",
									"item": [
										{
											"name": "Get current agent's activity history",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/activity-logs/me?page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"activity-logs",
														"me"
													],
													"query": [
														{
															"key": "page",
															"value": "0",
															"description": "Zero-based page index (0..N)"
														},
														{
															"key": "size",
															"value": "20",
															"description": "The size of the page to be returned"
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														}
													]
												},
												"description": "Retrieve paginated activity logs for the currently authenticated agent. Shows all actions performed by the agent including customer registrations, login/logout, profile changes, etc."
											},
											"response": [
												{
													"name": "Activity logs retrieved successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/me?page=0&size=20&sort=string&sort=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"me"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "20"
																},
																{
																	"key": "sort",
																	"value": "string"
																},
																{
																	"key": "sort",
																	"value": "string"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"actionType\": \"AGENT_PASSWORD_RESET_COMPLETED\",\n    \"entityType\": \"string\",\n    \"timestamp\": \"2010-05-10T19:07:00.077Z\",\n    \"id\": 1269,\n    \"entityId\": 2740,\n    \"description\": \"string\",\n    \"ipAddress\": \"string\",\n    \"userAgent\": \"string\",\n    \"sessionId\": \"string\",\n    \"status\": \"SUCCESS\",\n    \"errorMessage\": \"string\",\n    \"createdBy\": \"string\",\n    \"createdDate\": \"1983-02-07T02:29:00.218Z\",\n    \"lastModifiedBy\": \"string\",\n    \"lastModifiedDate\": \"1988-09-09T05:35:34.375Z\"\n  },\n  {\n    \"actionType\": \"AGENT_PASSWORD_RESET_COMPLETED\",\n    \"entityType\": \"string\",\n    \"timestamp\": \"1977-10-05T10:38:15.671Z\",\n    \"id\": 9386,\n    \"entityId\": 5566,\n    \"description\": \"string\",\n    \"ipAddress\": \"string\",\n    \"userAgent\": \"string\",\n    \"sessionId\": \"string\",\n    \"status\": \"FAILED\",\n    \"errorMessage\": \"string\",\n    \"createdBy\": \"string\",\n    \"createdDate\": \"1987-10-30T00:37:34.564Z\",\n    \"lastModifiedBy\": \"string\",\n    \"lastModifiedDate\": \"1971-01-29T18:41:48.660Z\"\n  }\n]"
												},
												{
													"name": "Unauthorized - Agent not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/me?page=0&size=20&sort=string&sort=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"me"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "20"
																},
																{
																	"key": "sort",
																	"value": "string"
																},
																{
																	"key": "sort",
																	"value": "string"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"actionType\": \"AGENT_PASSWORD_RESET_COMPLETED\",\n    \"entityType\": \"string\",\n    \"timestamp\": \"2010-05-10T19:07:00.077Z\",\n    \"id\": 1269,\n    \"entityId\": 2740,\n    \"description\": \"string\",\n    \"ipAddress\": \"string\",\n    \"userAgent\": \"string\",\n    \"sessionId\": \"string\",\n    \"status\": \"SUCCESS\",\n    \"errorMessage\": \"string\",\n    \"createdBy\": \"string\",\n    \"createdDate\": \"1983-02-07T02:29:00.218Z\",\n    \"lastModifiedBy\": \"string\",\n    \"lastModifiedDate\": \"1988-09-09T05:35:34.375Z\"\n  },\n  {\n    \"actionType\": \"AGENT_PASSWORD_RESET_COMPLETED\",\n    \"entityType\": \"string\",\n    \"timestamp\": \"1977-10-05T10:38:15.671Z\",\n    \"id\": 9386,\n    \"entityId\": 5566,\n    \"description\": \"string\",\n    \"ipAddress\": \"string\",\n    \"userAgent\": \"string\",\n    \"sessionId\": \"string\",\n    \"status\": \"FAILED\",\n    \"errorMessage\": \"string\",\n    \"createdBy\": \"string\",\n    \"createdDate\": \"1987-10-30T00:37:34.564Z\",\n    \"lastModifiedBy\": \"string\",\n    \"lastModifiedDate\": \"1971-01-29T18:41:48.660Z\"\n  }\n]"
												}
											]
										},
										{
											"name": "Get activity statistics",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/activity-logs/me/stats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"activity-logs",
														"me",
														"stats"
													]
												},
												"description": "Get summary statistics about agent activities for different time periods"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/me/stats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"me",
																"stats"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {\n    \"customersRegisteredToday\": 1749,\n    \"customersRegisteredThisWeek\": 7922,\n    \"customersRegisteredThisMonth\": 4282,\n    \"loginsToday\": 8937,\n    \"loginsThisWeek\": 4416\n  },\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"2016-09-23T00:05:44.444Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1954-09-13T18:09:56.538Z\",\n  \"path\": \"string\"\n}"
												}
											]
										},
										{
											"name": "Search activity logs",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/activity-logs/me/search?searchTerm=customer registration&page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"activity-logs",
														"me",
														"search"
													],
													"query": [
														{
															"key": "searchTerm",
															"value": "customer registration",
															"description": "(Required) Search term to look for in description or entity type"
														},
														{
															"key": "page",
															"value": "0",
															"description": "Zero-based page index (0..N)"
														},
														{
															"key": "size",
															"value": "20",
															"description": "The size of the page to be returned"
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														}
													]
												},
												"description": "Search through activity logs by description or entity type"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/me/search?searchTerm=customer registration&page=0&size=20&sort=string&sort=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"me",
																"search"
															],
															"query": [
																{
																	"key": "searchTerm",
																	"value": "customer registration"
																},
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "20"
																},
																{
																	"key": "sort",
																	"value": "string"
																},
																{
																	"key": "sort",
																	"value": "string"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"actionType\": \"AGENT_PASSWORD_RESET_COMPLETED\",\n    \"entityType\": \"string\",\n    \"timestamp\": \"2010-05-10T19:07:00.077Z\",\n    \"id\": 1269,\n    \"entityId\": 2740,\n    \"description\": \"string\",\n    \"ipAddress\": \"string\",\n    \"userAgent\": \"string\",\n    \"sessionId\": \"string\",\n    \"status\": \"SUCCESS\",\n    \"errorMessage\": \"string\",\n    \"createdBy\": \"string\",\n    \"createdDate\": \"1983-02-07T02:29:00.218Z\",\n    \"lastModifiedBy\": \"string\",\n    \"lastModifiedDate\": \"1988-09-09T05:35:34.375Z\"\n  },\n  {\n    \"actionType\": \"AGENT_PASSWORD_RESET_COMPLETED\",\n    \"entityType\": \"string\",\n    \"timestamp\": \"1977-10-05T10:38:15.671Z\",\n    \"id\": 9386,\n    \"entityId\": 5566,\n    \"description\": \"string\",\n    \"ipAddress\": \"string\",\n    \"userAgent\": \"string\",\n    \"sessionId\": \"string\",\n    \"status\": \"FAILED\",\n    \"errorMessage\": \"string\",\n    \"createdBy\": \"string\",\n    \"createdDate\": \"1987-10-30T00:37:34.564Z\",\n    \"lastModifiedBy\": \"string\",\n    \"lastModifiedDate\": \"1971-01-29T18:41:48.660Z\"\n  }\n]"
												}
											]
										},
										{
											"name": "Get activity logs by date range",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/activity-logs/me/date-range?startDate=2024-01-01&endDate=2024-01-31&page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"activity-logs",
														"me",
														"date-range"
													],
													"query": [
														{
															"key": "startDate",
															"value": "2024-01-01",
															"description": "(Required) Start date (inclusive)"
														},
														{
															"key": "endDate",
															"value": "2024-01-31",
															"description": "(Required) End date (inclusive)"
														},
														{
															"key": "page",
															"value": "0",
															"description": "Zero-based page index (0..N)"
														},
														{
															"key": "size",
															"value": "20",
															"description": "The size of the page to be returned"
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														}
													]
												},
												"description": "Filter activity logs by date range"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/me/date-range?startDate=2024-01-01&endDate=2024-01-31&page=0&size=20&sort=string&sort=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"me",
																"date-range"
															],
															"query": [
																{
																	"key": "startDate",
																	"value": "2024-01-01"
																},
																{
																	"key": "endDate",
																	"value": "2024-01-31"
																},
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "20"
																},
																{
																	"key": "sort",
																	"value": "string"
																},
																{
																	"key": "sort",
																	"value": "string"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"actionType\": \"AGENT_PASSWORD_RESET_COMPLETED\",\n    \"entityType\": \"string\",\n    \"timestamp\": \"2010-05-10T19:07:00.077Z\",\n    \"id\": 1269,\n    \"entityId\": 2740,\n    \"description\": \"string\",\n    \"ipAddress\": \"string\",\n    \"userAgent\": \"string\",\n    \"sessionId\": \"string\",\n    \"status\": \"SUCCESS\",\n    \"errorMessage\": \"string\",\n    \"createdBy\": \"string\",\n    \"createdDate\": \"1983-02-07T02:29:00.218Z\",\n    \"lastModifiedBy\": \"string\",\n    \"lastModifiedDate\": \"1988-09-09T05:35:34.375Z\"\n  },\n  {\n    \"actionType\": \"AGENT_PASSWORD_RESET_COMPLETED\",\n    \"entityType\": \"string\",\n    \"timestamp\": \"1977-10-05T10:38:15.671Z\",\n    \"id\": 9386,\n    \"entityId\": 5566,\n    \"description\": \"string\",\n    \"ipAddress\": \"string\",\n    \"userAgent\": \"string\",\n    \"sessionId\": \"string\",\n    \"status\": \"FAILED\",\n    \"errorMessage\": \"string\",\n    \"createdBy\": \"string\",\n    \"createdDate\": \"1987-10-30T00:37:34.564Z\",\n    \"lastModifiedBy\": \"string\",\n    \"lastModifiedDate\": \"1971-01-29T18:41:48.660Z\"\n  }\n]"
												}
											]
										},
										{
											"name": "Get activity logs by action type",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/activity-logs/me/by-action/:actionType?page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"activity-logs",
														"me",
														"by-action",
														":actionType"
													],
													"query": [
														{
															"key": "page",
															"value": "0",
															"description": "Zero-based page index (0..N)"
														},
														{
															"key": "size",
															"value": "20",
															"description": "The size of the page to be returned"
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														}
													],
													"variable": [
														{
															"key": "actionType",
															"value": "CUSTOMER_REGISTERED",
															"description": "(Required) Action type to filter by"
														}
													]
												},
												"description": "Filter activity logs by specific action type (e.g., CUSTOMER_REGISTERED, AGENT_LOGIN, etc.)"
											},
											"response": [
												{
													"name": "Filtered activity logs retrieved successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/me/by-action/:actionType?page=0&size=20&sort=string&sort=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"me",
																"by-action",
																":actionType"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "20"
																},
																{
																	"key": "sort",
																	"value": "string"
																},
																{
																	"key": "sort",
																	"value": "string"
																}
															],
															"variable": [
																{
																	"key": "actionType",
																	"value": "CUSTOMER_REGISTERED",
																	"description": "(Required) Action type to filter by"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"actionType\": \"AGENT_PASSWORD_RESET_COMPLETED\",\n    \"entityType\": \"string\",\n    \"timestamp\": \"2010-05-10T19:07:00.077Z\",\n    \"id\": 1269,\n    \"entityId\": 2740,\n    \"description\": \"string\",\n    \"ipAddress\": \"string\",\n    \"userAgent\": \"string\",\n    \"sessionId\": \"string\",\n    \"status\": \"SUCCESS\",\n    \"errorMessage\": \"string\",\n    \"createdBy\": \"string\",\n    \"createdDate\": \"1983-02-07T02:29:00.218Z\",\n    \"lastModifiedBy\": \"string\",\n    \"lastModifiedDate\": \"1988-09-09T05:35:34.375Z\"\n  },\n  {\n    \"actionType\": \"AGENT_PASSWORD_RESET_COMPLETED\",\n    \"entityType\": \"string\",\n    \"timestamp\": \"1977-10-05T10:38:15.671Z\",\n    \"id\": 9386,\n    \"entityId\": 5566,\n    \"description\": \"string\",\n    \"ipAddress\": \"string\",\n    \"userAgent\": \"string\",\n    \"sessionId\": \"string\",\n    \"status\": \"FAILED\",\n    \"errorMessage\": \"string\",\n    \"createdBy\": \"string\",\n    \"createdDate\": \"1987-10-30T00:37:34.564Z\",\n    \"lastModifiedBy\": \"string\",\n    \"lastModifiedDate\": \"1971-01-29T18:41:48.660Z\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "admin",
									"item": [
										{
											"name": "Get activity logs by user (Admin)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/activity-logs/admin/user/:username?page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"activity-logs",
														"admin",
														"user",
														":username"
													],
													"query": [
														{
															"key": "page",
															"value": "0",
															"description": "Zero-based page index (0..N)"
														},
														{
															"key": "size",
															"value": "20",
															"description": "The size of the page to be returned"
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														}
													],
													"variable": [
														{
															"key": "username",
															"value": "agent.doe",
															"description": "(Required) Username to filter by"
														}
													]
												},
												"description": "Admin endpoint to retrieve activity logs for a specific user."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/admin/user/:username?page=0&size=20&sort=string&sort=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"admin",
																"user",
																":username"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "20"
																},
																{
																	"key": "sort",
																	"value": "string"
																},
																{
																	"key": "sort",
																	"value": "string"
																}
															],
															"variable": [
																{
																	"key": "username",
																	"value": "agent.doe",
																	"description": "(Required) Username to filter by"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {\n    \"totalPages\": 8133,\n    \"totalElements\": 6627,\n    \"first\": false,\n    \"last\": false,\n    \"size\": 9378,\n    \"content\": [\n      {\n        \"actionType\": \"AGENT_UPDATED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1975-07-12T13:22:23.805Z\",\n        \"id\": 3312,\n        \"entityId\": 1705,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"2010-09-18T09:20:33.052Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1996-01-15T06:51:18.278Z\"\n      },\n      {\n        \"actionType\": \"CUSTOMER_SEARCHED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1951-06-22T07:53:07.097Z\",\n        \"id\": 6490,\n        \"entityId\": 3159,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"1994-05-17T03:17:19.967Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1990-03-10T01:18:14.681Z\"\n      }\n    ],\n    \"number\": 5033,\n    \"sort\": {\n      \"empty\": true,\n      \"sorted\": true,\n      \"unsorted\": false\n    },\n    \"pageable\": {\n      \"offset\": 3236,\n      \"sort\": {\n        \"empty\": true,\n        \"sorted\": false,\n        \"unsorted\": false\n      },\n      \"paged\": false,\n      \"pageNumber\": 3740,\n      \"pageSize\": 495,\n      \"unpaged\": true\n    },\n    \"numberOfElements\": 1247,\n    \"empty\": false\n  },\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"2016-02-03T09:57:01.809Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1960-03-29T11:43:02.803Z\",\n  \"path\": \"string\"\n}"
												}
											]
										},
										{
											"name": "Get system-wide activity statistics (Admin)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/activity-logs/admin/system-stats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"activity-logs",
														"admin",
														"system-stats"
													]
												},
												"description": "Admin endpoint to get comprehensive system-wide activity statistics."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/admin/system-stats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"admin",
																"system-stats"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {\n    \"totalAgentsRegisteredToday\": 3295,\n    \"totalAgentsRegisteredThisWeek\": 3749,\n    \"totalAgentsRegisteredThisMonth\": 3442,\n    \"totalCustomersRegisteredToday\": 7072,\n    \"totalCustomersRegisteredThisWeek\": 8425,\n    \"totalCustomersRegisteredThisMonth\": 2077,\n    \"totalLoginsToday\": 6178,\n    \"totalLoginsThisWeek\": 5068,\n    \"totalLoginsThisMonth\": 1430\n  },\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"2004-02-11T07:43:40.104Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {},\n      \"key_1\": {},\n      \"key_2\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1978-03-14T12:00:20.774Z\",\n  \"path\": \"string\"\n}"
												}
											]
										},
										{
											"name": "Search all activity logs (Admin)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/activity-logs/admin/search?searchTerm=agent registration&page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"activity-logs",
														"admin",
														"search"
													],
													"query": [
														{
															"key": "searchTerm",
															"value": "agent registration",
															"description": "(Required) Search term to look for in description or entity type"
														},
														{
															"key": "page",
															"value": "0",
															"description": "Zero-based page index (0..N)"
														},
														{
															"key": "size",
															"value": "20",
															"description": "The size of the page to be returned"
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														}
													]
												},
												"description": "Admin endpoint to search across all activity logs by description or entity type."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/admin/search?searchTerm=agent registration&page=0&size=20&sort=string&sort=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"admin",
																"search"
															],
															"query": [
																{
																	"key": "searchTerm",
																	"value": "agent registration"
																},
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "20"
																},
																{
																	"key": "sort",
																	"value": "string"
																},
																{
																	"key": "sort",
																	"value": "string"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {\n    \"totalPages\": 8133,\n    \"totalElements\": 6627,\n    \"first\": false,\n    \"last\": false,\n    \"size\": 9378,\n    \"content\": [\n      {\n        \"actionType\": \"AGENT_UPDATED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1975-07-12T13:22:23.805Z\",\n        \"id\": 3312,\n        \"entityId\": 1705,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"2010-09-18T09:20:33.052Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1996-01-15T06:51:18.278Z\"\n      },\n      {\n        \"actionType\": \"CUSTOMER_SEARCHED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1951-06-22T07:53:07.097Z\",\n        \"id\": 6490,\n        \"entityId\": 3159,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"1994-05-17T03:17:19.967Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1990-03-10T01:18:14.681Z\"\n      }\n    ],\n    \"number\": 5033,\n    \"sort\": {\n      \"empty\": true,\n      \"sorted\": true,\n      \"unsorted\": false\n    },\n    \"pageable\": {\n      \"offset\": 3236,\n      \"sort\": {\n        \"empty\": true,\n        \"sorted\": false,\n        \"unsorted\": false\n      },\n      \"paged\": false,\n      \"pageNumber\": 3740,\n      \"pageSize\": 495,\n      \"unpaged\": true\n    },\n    \"numberOfElements\": 1247,\n    \"empty\": false\n  },\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"2016-02-03T09:57:01.809Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1960-03-29T11:43:02.803Z\",\n  \"path\": \"string\"\n}"
												}
											]
										},
										{
											"name": "Get activity logs by date range (Admin)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/activity-logs/admin/date-range?startDate=2024-01-01&endDate=2024-01-31&page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"activity-logs",
														"admin",
														"date-range"
													],
													"query": [
														{
															"key": "startDate",
															"value": "2024-01-01",
															"description": "(Required) Start date (inclusive)"
														},
														{
															"key": "endDate",
															"value": "2024-01-31",
															"description": "(Required) End date (inclusive)"
														},
														{
															"key": "page",
															"value": "0",
															"description": "Zero-based page index (0..N)"
														},
														{
															"key": "size",
															"value": "20",
															"description": "The size of the page to be returned"
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														}
													]
												},
												"description": "Admin endpoint to filter all activity logs by date range."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/admin/date-range?startDate=2024-01-01&endDate=2024-01-31&page=0&size=20&sort=string&sort=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"admin",
																"date-range"
															],
															"query": [
																{
																	"key": "startDate",
																	"value": "2024-01-01"
																},
																{
																	"key": "endDate",
																	"value": "2024-01-31"
																},
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "20"
																},
																{
																	"key": "sort",
																	"value": "string"
																},
																{
																	"key": "sort",
																	"value": "string"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {\n    \"totalPages\": 8133,\n    \"totalElements\": 6627,\n    \"first\": false,\n    \"last\": false,\n    \"size\": 9378,\n    \"content\": [\n      {\n        \"actionType\": \"AGENT_UPDATED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1975-07-12T13:22:23.805Z\",\n        \"id\": 3312,\n        \"entityId\": 1705,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"2010-09-18T09:20:33.052Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1996-01-15T06:51:18.278Z\"\n      },\n      {\n        \"actionType\": \"CUSTOMER_SEARCHED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1951-06-22T07:53:07.097Z\",\n        \"id\": 6490,\n        \"entityId\": 3159,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"1994-05-17T03:17:19.967Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1990-03-10T01:18:14.681Z\"\n      }\n    ],\n    \"number\": 5033,\n    \"sort\": {\n      \"empty\": true,\n      \"sorted\": true,\n      \"unsorted\": false\n    },\n    \"pageable\": {\n      \"offset\": 3236,\n      \"sort\": {\n        \"empty\": true,\n        \"sorted\": false,\n        \"unsorted\": false\n      },\n      \"paged\": false,\n      \"pageNumber\": 3740,\n      \"pageSize\": 495,\n      \"unpaged\": true\n    },\n    \"numberOfElements\": 1247,\n    \"empty\": false\n  },\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"2016-02-03T09:57:01.809Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1960-03-29T11:43:02.803Z\",\n  \"path\": \"string\"\n}"
												}
											]
										},
										{
											"name": "Get activity logs by action type (Admin)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/activity-logs/admin/by-action/:actionType?page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"activity-logs",
														"admin",
														"by-action",
														":actionType"
													],
													"query": [
														{
															"key": "page",
															"value": "0",
															"description": "Zero-based page index (0..N)"
														},
														{
															"key": "size",
															"value": "20",
															"description": "The size of the page to be returned"
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														}
													],
													"variable": [
														{
															"key": "actionType",
															"value": "AGENT_REGISTERED",
															"description": "(Required) Action type to filter by"
														}
													]
												},
												"description": "Admin endpoint to retrieve all activity logs filtered by action type."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/admin/by-action/:actionType?page=0&size=20&sort=string&sort=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"admin",
																"by-action",
																":actionType"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "20"
																},
																{
																	"key": "sort",
																	"value": "string"
																},
																{
																	"key": "sort",
																	"value": "string"
																}
															],
															"variable": [
																{
																	"key": "actionType",
																	"value": "AGENT_REGISTERED",
																	"description": "(Required) Action type to filter by"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {\n    \"totalPages\": 8133,\n    \"totalElements\": 6627,\n    \"first\": false,\n    \"last\": false,\n    \"size\": 9378,\n    \"content\": [\n      {\n        \"actionType\": \"AGENT_UPDATED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1975-07-12T13:22:23.805Z\",\n        \"id\": 3312,\n        \"entityId\": 1705,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"2010-09-18T09:20:33.052Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1996-01-15T06:51:18.278Z\"\n      },\n      {\n        \"actionType\": \"CUSTOMER_SEARCHED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1951-06-22T07:53:07.097Z\",\n        \"id\": 6490,\n        \"entityId\": 3159,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"1994-05-17T03:17:19.967Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1990-03-10T01:18:14.681Z\"\n      }\n    ],\n    \"number\": 5033,\n    \"sort\": {\n      \"empty\": true,\n      \"sorted\": true,\n      \"unsorted\": false\n    },\n    \"pageable\": {\n      \"offset\": 3236,\n      \"sort\": {\n        \"empty\": true,\n        \"sorted\": false,\n        \"unsorted\": false\n      },\n      \"paged\": false,\n      \"pageNumber\": 3740,\n      \"pageSize\": 495,\n      \"unpaged\": true\n    },\n    \"numberOfElements\": 1247,\n    \"empty\": false\n  },\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"2016-02-03T09:57:01.809Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1960-03-29T11:43:02.803Z\",\n  \"path\": \"string\"\n}"
												}
											]
										},
										{
											"name": "Get all activity logs (Admin)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/activity-logs/admin/all?page=0&size=20&sort=string&sort=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"activity-logs",
														"admin",
														"all"
													],
													"query": [
														{
															"key": "page",
															"value": "0",
															"description": "Zero-based page index (0..N)"
														},
														{
															"key": "size",
															"value": "20",
															"description": "The size of the page to be returned"
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														},
														{
															"key": "sort",
															"value": "string",
															"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
														}
													]
												},
												"description": "Admin endpoint to retrieve all activity logs across the system with filtering and pagination."
											},
											"response": [
												{
													"name": "All activity logs retrieved successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/admin/all?page=0&size=20&sort=string&sort=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"admin",
																"all"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "20"
																},
																{
																	"key": "sort",
																	"value": "string"
																},
																{
																	"key": "sort",
																	"value": "string"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {\n    \"totalPages\": 8133,\n    \"totalElements\": 6627,\n    \"first\": false,\n    \"last\": false,\n    \"size\": 9378,\n    \"content\": [\n      {\n        \"actionType\": \"AGENT_UPDATED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1975-07-12T13:22:23.805Z\",\n        \"id\": 3312,\n        \"entityId\": 1705,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"2010-09-18T09:20:33.052Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1996-01-15T06:51:18.278Z\"\n      },\n      {\n        \"actionType\": \"CUSTOMER_SEARCHED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1951-06-22T07:53:07.097Z\",\n        \"id\": 6490,\n        \"entityId\": 3159,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"1994-05-17T03:17:19.967Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1990-03-10T01:18:14.681Z\"\n      }\n    ],\n    \"number\": 5033,\n    \"sort\": {\n      \"empty\": true,\n      \"sorted\": true,\n      \"unsorted\": false\n    },\n    \"pageable\": {\n      \"offset\": 3236,\n      \"sort\": {\n        \"empty\": true,\n        \"sorted\": false,\n        \"unsorted\": false\n      },\n      \"paged\": false,\n      \"pageNumber\": 3740,\n      \"pageSize\": 495,\n      \"unpaged\": true\n    },\n    \"numberOfElements\": 1247,\n    \"empty\": false\n  },\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"2016-02-03T09:57:01.809Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1960-03-29T11:43:02.803Z\",\n  \"path\": \"string\"\n}"
												},
												{
													"name": "Forbidden - Admin access required",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/activity-logs/admin/all?page=0&size=20&sort=string&sort=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"activity-logs",
																"admin",
																"all"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "20"
																},
																{
																	"key": "sort",
																	"value": "string"
																},
																{
																	"key": "sort",
																	"value": "string"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {\n    \"totalPages\": 8133,\n    \"totalElements\": 6627,\n    \"first\": false,\n    \"last\": false,\n    \"size\": 9378,\n    \"content\": [\n      {\n        \"actionType\": \"AGENT_UPDATED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1975-07-12T13:22:23.805Z\",\n        \"id\": 3312,\n        \"entityId\": 1705,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"2010-09-18T09:20:33.052Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1996-01-15T06:51:18.278Z\"\n      },\n      {\n        \"actionType\": \"CUSTOMER_SEARCHED\",\n        \"entityType\": \"string\",\n        \"timestamp\": \"1951-06-22T07:53:07.097Z\",\n        \"id\": 6490,\n        \"entityId\": 3159,\n        \"description\": \"string\",\n        \"ipAddress\": \"string\",\n        \"userAgent\": \"string\",\n        \"sessionId\": \"string\",\n        \"status\": \"SUCCESS\",\n        \"errorMessage\": \"string\",\n        \"createdBy\": \"string\",\n        \"createdDate\": \"1994-05-17T03:17:19.967Z\",\n        \"lastModifiedBy\": \"string\",\n        \"lastModifiedDate\": \"1990-03-10T01:18:14.681Z\"\n      }\n    ],\n    \"number\": 5033,\n    \"sort\": {\n      \"empty\": true,\n      \"sorted\": true,\n      \"unsorted\": false\n    },\n    \"pageable\": {\n      \"offset\": 3236,\n      \"sort\": {\n        \"empty\": true,\n        \"sorted\": false,\n        \"unsorted\": false\n      },\n      \"paged\": false,\n      \"pageNumber\": 3740,\n      \"pageSize\": 495,\n      \"unpaged\": true\n    },\n    \"numberOfElements\": 1247,\n    \"empty\": false\n  },\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"2016-02-03T09:57:01.809Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1960-03-29T11:43:02.803Z\",\n  \"path\": \"string\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Register a new user account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"register"
									]
								},
								"description": "Create a new user account. Sends activation email. No authentication required."
							},
							"response": [
								{
									"name": "User registered successfully - activation email sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "null",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"register"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {},\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"details\": \"string\",\n    \"timestamp\": \"1962-12-25T07:02:50.554Z\",\n    \"path\": \"string\",\n    \"metadata\": {\n      \"key_0\": {}\n    },\n    \"fieldErrors\": [\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      },\n      {\n        \"field\": \"string\",\n        \"rejectedValue\": {},\n        \"message\": \"string\",\n        \"code\": \"string\"\n      }\n    ]\n  },\n  \"timestamp\": \"1958-09-23T04:17:55.669Z\",\n  \"path\": \"string\"\n}"
								},
								{
									"name": "Bad request - Invalid data or email/login already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "null",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"\""
								}
							]
						},
						{
							"name": "Activate user account",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/activate?key=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"activate"
									],
									"query": [
										{
											"key": "key",
											"value": "string",
											"description": "(Required) Activation key from email"
										}
									]
								},
								"description": "Activate a user account using the activation key sent via email."
							},
							"response": [
								{
									"name": "Account activated successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/activate?key=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"activate"
											],
											"query": [
												{
													"key": "key",
													"value": "string"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"\""
								},
								{
									"name": "Invalid activation key",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/activate?key=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"activate"
											],
											"query": [
												{
													"key": "key",
													"value": "string"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"\""
								}
							]
						}
					]
				},
				{
					"name": "authenticate",
					"item": [
						{
							"name": "Check authentication status",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"authenticate"
									]
								},
								"description": "Verify if the current user is authenticated by checking for a valid JWT token in the request headers."
							},
							"response": [
								{
									"name": "User is authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"authenticate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"User is authenticated\"\n}"
								},
								{
									"name": "User not authenticated - No valid token provided",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"authenticate"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"UNAUTHORIZED\",\n  \"message\": \"User not authenticated\"\n}"
								}
							]
						},
						{
							"name": "Authenticate user",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "// {\n//   \"password\": \"admin\",\n//   \"username\": \"admin\",\n//   \"rememberMe\": true\n// }\n// {\n//   \"password\": \"password\",\n//   \"username\": \"0721015320\",\n//   \"rememberMe\": true\n// }\n// {\n//     \"username\": \"0711015320\",\n//     \"password\": \"password\",\n//     \"rememberMe\": true\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"authenticate"
									]
								},
								"description": "Authenticate a user with username/password and return a JWT access token. Supports 'remember me' functionality for extended token validity."
							},
							"response": [
								{
									"name": "Authentication successful - JWT token returned",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"string\",\n  \"username\": \"st\",\n  \"rememberMe\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"authenticate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Authentication successful\",\n  \"data\": {\n    \"access_token\": \"eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJST0xFX0FETUlOIFJPTEVfVVNFUiIsImV4cCI6MTY0MDk5NTIwMH0...\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 86400\n  }\n}"
								},
								{
									"name": "Bad request - Invalid input format",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"string\",\n  \"username\": \"st\",\n  \"rememberMe\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"authenticate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"Bad Request\",\n  \"message\": \"Username and password are required\"\n}"
								},
								{
									"name": "Authentication failed - Invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"string\",\n  \"username\": \"st\",\n  \"rememberMe\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"authenticate"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Bad credentials\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Logout user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"logout"
							]
						},
						"description": "Logout the current authenticated user by clearing the security context. Note: JWT tokens are stateless, so this only clears server-side session data."
					},
					"response": [
						{
							"name": "Logout successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"SUCCESS\",\n  \"message\": \"Logout successful\",\n  \"data\": null\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}