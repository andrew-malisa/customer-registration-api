name: customerregistrationsystem
services:
  app:
    image: customerregistrationsystem
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/CustomerRegistrationSystem
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://postgresql:5432/CustomerRegistrationSystem
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
      - SPRING_MAIL_HOST=mailhog
      - SPRING_MAIL_PORT=1025
    ports:
      - 127.0.0.1:8080:8080
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      postgresql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      mailhog:
        condition: service_healthy

  postgresql:
    image: postgres:17.4
    environment:
      - POSTGRES_USER=CustomerRegistrationSystem
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
    environment:
      - 'ES_JAVA_OPTS=-Xms256m -Xmx256m'
      - 'discovery.type=single-node'
      - 'xpack.security.enabled=false'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s']
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: customerregistrationsystem-mailhog
    ports:
      # SMTP server (apps send mail here)
      - 127.0.0.1:1025:1025
      # Web UI (to view captured mails)
      - 127.0.0.1:8025:8025
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8025"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  postgres_data:
  elasticsearch_data: