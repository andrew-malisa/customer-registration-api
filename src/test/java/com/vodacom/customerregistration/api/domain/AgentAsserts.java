package com.vodacom.customerregistration.api.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AgentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgentAllPropertiesEquals(Agent expected, Agent actual) {
        assertAgentAutoGeneratedPropertiesEquals(expected, actual);
        assertAgentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgentAllUpdatablePropertiesEquals(Agent expected, Agent actual) {
        assertAgentUpdatableFieldsEquals(expected, actual);
        assertAgentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgentAutoGeneratedPropertiesEquals(Agent expected, Agent actual) {
        assertThat(actual)
            .as("Verify Agent auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgentUpdatableFieldsEquals(Agent expected, Agent actual) {
        assertThat(actual)
            .as("Verify Agent relevant properties")
            .satisfies(a -> assertThat(a.getPhoneNumber()).as("check phoneNumber").isEqualTo(expected.getPhoneNumber()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgentUpdatableRelationshipsEquals(Agent expected, Agent actual) {
        assertThat(actual)
            .as("Verify Agent relationships")
            .satisfies(a -> assertThat(a.getRegion()).as("check region").isEqualTo(expected.getRegion()))
            .satisfies(a -> assertThat(a.getDistrict()).as("check district").isEqualTo(expected.getDistrict()))
            .satisfies(a -> assertThat(a.getWard()).as("check ward").isEqualTo(expected.getWard()));
    }
}
